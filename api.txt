2021-09-03 13:54:37.513 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-03 13:54:37.665 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-03 13:54:37.665 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-03 13:54:37.665 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-03 13:54:37.666 +02:00 [INF] Hosting environment: Development
2021-09-03 13:54:37.666 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-03 13:54:51.531 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 13:54:51.546 +02:00 [INF] CORS policy execution successful.
2021-09-03 13:54:51.548 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 18.6323ms
2021-09-03 13:54:51.550 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 13:54:51.559 +02:00 [INF] CORS policy execution successful.
2021-09-03 13:54:51.590 +02:00 [INF] Executing endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 13:54:51.600 +02:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[ExampleApi.WeatherForecast] Get() on controller ExampleApi.Controllers.WeatherForecastController (ExampleApi).
2021-09-03 13:54:51.605 +02:00 [INF] Executing ObjectResult, writing value of type 'ExampleApi.WeatherForecast[]'.
2021-09-03 13:54:51.624 +02:00 [INF] Executed action ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi) in 21.4455ms
2021-09-03 13:54:51.626 +02:00 [INF] Executed endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 13:54:51.626 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 200 - application/json;+charset=utf-8 75.8353ms
2021-09-03 13:56:11.664 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-03 13:56:11.816 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-03 13:56:11.816 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-03 13:56:11.816 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-03 13:56:11.816 +02:00 [INF] Hosting environment: Development
2021-09-03 13:56:11.816 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-03 13:56:19.747 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 13:56:19.761 +02:00 [INF] CORS policy execution successful.
2021-09-03 13:56:19.764 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 17.7765ms
2021-09-03 13:56:19.765 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 13:56:19.776 +02:00 [INF] CORS policy execution successful.
2021-09-03 13:56:19.809 +02:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2021-09-03 13:56:19.811 +02:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: No authenticationScheme was specified, and there was no DefaultChallengeScheme found. The default schemes can be set using either AddAuthentication(string defaultScheme) or AddAuthentication(Action<AuthenticationOptions> configureOptions).
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.HandleAsync(RequestDelegate next, HttpContext context, AuthorizationPolicy policy, PolicyAuthorizationResult authorizeResult)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2021-09-03 13:56:19.824 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 500 - text/plain 58.6334ms
2021-09-03 13:57:07.114 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-03 13:57:07.277 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-03 13:57:07.277 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-03 13:57:07.277 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-03 13:57:07.277 +02:00 [INF] Hosting environment: Development
2021-09-03 13:57:07.277 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-03 13:57:11.916 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 13:57:11.929 +02:00 [INF] CORS policy execution successful.
2021-09-03 13:57:11.932 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 18.2425ms
2021-09-03 13:57:11.934 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 13:57:11.944 +02:00 [INF] CORS policy execution successful.
2021-09-03 13:57:11.978 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-03 13:57:11.979 +02:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: No authenticationScheme was specified, and there was no DefaultChallengeScheme found. The default schemes can be set using either AddAuthentication(string defaultScheme) or AddAuthentication(Action<AuthenticationOptions> configureOptions).
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.HandleAsync(RequestDelegate next, HttpContext context, AuthorizationPolicy policy, PolicyAuthorizationResult authorizeResult)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2021-09-03 13:57:11.993 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 500 - text/plain 58.7081ms
2021-09-03 13:58:26.284 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-03 13:58:26.444 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-03 13:58:26.444 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-03 13:58:26.444 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-03 13:58:26.444 +02:00 [INF] Hosting environment: Development
2021-09-03 13:58:26.444 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-03 13:58:30.037 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 13:58:30.051 +02:00 [INF] CORS policy execution successful.
2021-09-03 13:58:30.054 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 18.4219ms
2021-09-03 13:58:30.056 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 13:58:30.064 +02:00 [INF] CORS policy execution successful.
2021-09-03 13:58:30.099 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-03 13:58:30.100 +02:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: No authenticationScheme was specified, and there was no DefaultChallengeScheme found. The default schemes can be set using either AddAuthentication(string defaultScheme) or AddAuthentication(Action<AuthenticationOptions> configureOptions).
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.HandleAsync(RequestDelegate next, HttpContext context, AuthorizationPolicy policy, PolicyAuthorizationResult authorizeResult)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2021-09-03 13:58:30.114 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 500 - text/plain 58.2584ms
2021-09-03 13:59:05.646 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-03 13:59:05.797 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-03 13:59:05.797 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-03 13:59:05.797 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-03 13:59:05.797 +02:00 [INF] Hosting environment: Development
2021-09-03 13:59:05.797 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-03 13:59:13.197 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 13:59:13.211 +02:00 [INF] CORS policy execution successful.
2021-09-03 13:59:13.214 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 18.1026ms
2021-09-03 13:59:13.216 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 13:59:13.225 +02:00 [INF] CORS policy execution successful.
2021-09-03 13:59:13.264 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-03 13:59:13.265 +02:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: No authenticationScheme was specified, and there was no DefaultChallengeScheme found. The default schemes can be set using either AddAuthentication(string defaultScheme) or AddAuthentication(Action<AuthenticationOptions> configureOptions).
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.HandleAsync(RequestDelegate next, HttpContext context, AuthorizationPolicy policy, PolicyAuthorizationResult authorizeResult)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2021-09-03 13:59:13.280 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 500 - text/plain 64.6978ms
2021-09-03 13:59:35.079 +02:00 [INF] Application is shutting down...
2021-09-03 13:59:40.375 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-03 13:59:40.523 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-03 13:59:40.524 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-03 13:59:40.524 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-03 13:59:40.524 +02:00 [INF] Hosting environment: Development
2021-09-03 13:59:40.524 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-03 13:59:45.231 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 13:59:45.246 +02:00 [INF] CORS policy execution successful.
2021-09-03 13:59:45.249 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 19.0660ms
2021-09-03 13:59:45.250 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 13:59:45.260 +02:00 [INF] CORS policy execution successful.
2021-09-03 13:59:45.295 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-03 13:59:45.296 +02:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: No authenticationScheme was specified, and there was no DefaultChallengeScheme found. The default schemes can be set using either AddAuthentication(string defaultScheme) or AddAuthentication(Action<AuthenticationOptions> configureOptions).
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.HandleAsync(RequestDelegate next, HttpContext context, AuthorizationPolicy policy, PolicyAuthorizationResult authorizeResult)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2021-09-03 13:59:45.310 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 500 - text/plain 59.3610ms
2021-09-03 14:04:01.220 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 14:04:01.221 +02:00 [INF] CORS policy execution successful.
2021-09-03 14:04:01.221 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 1.2004ms
2021-09-03 14:04:01.225 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 14:04:01.226 +02:00 [INF] CORS policy execution successful.
2021-09-03 14:04:01.227 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-03 14:04:01.227 +02:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: No authenticationScheme was specified, and there was no DefaultChallengeScheme found. The default schemes can be set using either AddAuthentication(string defaultScheme) or AddAuthentication(Action<AuthenticationOptions> configureOptions).
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.HandleAsync(RequestDelegate next, HttpContext context, AuthorizationPolicy policy, PolicyAuthorizationResult authorizeResult)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2021-09-03 14:04:01.228 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 500 - text/plain 2.9478ms
2021-09-03 14:04:05.300 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 14:04:05.300 +02:00 [INF] CORS policy execution successful.
2021-09-03 14:04:05.303 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-03 14:04:05.304 +02:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: No authenticationScheme was specified, and there was no DefaultChallengeScheme found. The default schemes can be set using either AddAuthentication(string defaultScheme) or AddAuthentication(Action<AuthenticationOptions> configureOptions).
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.HandleAsync(RequestDelegate next, HttpContext context, AuthorizationPolicy policy, PolicyAuthorizationResult authorizeResult)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2021-09-03 14:04:05.305 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 500 - text/plain 5.1545ms
2021-09-03 14:05:49.689 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-03 14:05:49.841 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-03 14:05:49.841 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-03 14:05:49.841 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-03 14:05:49.841 +02:00 [INF] Hosting environment: Development
2021-09-03 14:05:49.841 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-03 14:05:52.011 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 14:05:52.025 +02:00 [INF] CORS policy execution successful.
2021-09-03 14:05:52.028 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 18.2418ms
2021-09-03 14:05:52.031 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 14:05:52.040 +02:00 [INF] CORS policy execution successful.
2021-09-03 14:05:52.074 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-03 14:05:52.075 +02:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: No authenticationScheme was specified, and there was no DefaultChallengeScheme found. The default schemes can be set using either AddAuthentication(string defaultScheme) or AddAuthentication(Action<AuthenticationOptions> configureOptions).
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.HandleAsync(RequestDelegate next, HttpContext context, AuthorizationPolicy policy, PolicyAuthorizationResult authorizeResult)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2021-09-03 14:05:52.089 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 500 - text/plain 58.0451ms
2021-09-03 14:05:53.299 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 14:05:53.300 +02:00 [INF] CORS policy execution successful.
2021-09-03 14:05:53.301 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-03 14:05:53.301 +02:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: No authenticationScheme was specified, and there was no DefaultChallengeScheme found. The default schemes can be set using either AddAuthentication(string defaultScheme) or AddAuthentication(Action<AuthenticationOptions> configureOptions).
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.HandleAsync(RequestDelegate next, HttpContext context, AuthorizationPolicy policy, PolicyAuthorizationResult authorizeResult)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2021-09-03 14:05:53.302 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 500 - text/plain 2.4477ms
2021-09-03 14:05:54.037 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 14:05:54.037 +02:00 [INF] CORS policy execution successful.
2021-09-03 14:05:54.039 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-03 14:05:54.041 +02:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: No authenticationScheme was specified, and there was no DefaultChallengeScheme found. The default schemes can be set using either AddAuthentication(string defaultScheme) or AddAuthentication(Action<AuthenticationOptions> configureOptions).
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.HandleAsync(RequestDelegate next, HttpContext context, AuthorizationPolicy policy, PolicyAuthorizationResult authorizeResult)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2021-09-03 14:05:54.042 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 500 - text/plain 5.6270ms
2021-09-03 14:05:59.000 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 14:05:59.000 +02:00 [INF] CORS policy execution successful.
2021-09-03 14:05:59.001 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 0.3609ms
2021-09-03 14:05:59.002 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 14:05:59.002 +02:00 [INF] CORS policy execution successful.
2021-09-03 14:05:59.002 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-03 14:05:59.002 +02:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: No authenticationScheme was specified, and there was no DefaultChallengeScheme found. The default schemes can be set using either AddAuthentication(string defaultScheme) or AddAuthentication(Action<AuthenticationOptions> configureOptions).
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.HandleAsync(RequestDelegate next, HttpContext context, AuthorizationPolicy policy, PolicyAuthorizationResult authorizeResult)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2021-09-03 14:05:59.003 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 500 - text/plain 1.1717ms
2021-09-03 14:06:00.800 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 14:06:00.800 +02:00 [INF] CORS policy execution successful.
2021-09-03 14:06:00.801 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-03 14:06:00.801 +02:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: No authenticationScheme was specified, and there was no DefaultChallengeScheme found. The default schemes can be set using either AddAuthentication(string defaultScheme) or AddAuthentication(Action<AuthenticationOptions> configureOptions).
   at Microsoft.AspNetCore.Authentication.AuthenticationService.ChallengeAsync(HttpContext context, String scheme, AuthenticationProperties properties)
   at Microsoft.AspNetCore.Authorization.Policy.AuthorizationMiddlewareResultHandler.HandleAsync(RequestDelegate next, HttpContext context, AuthorizationPolicy policy, PolicyAuthorizationResult authorizeResult)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2021-09-03 14:06:00.802 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 500 - text/plain 2.2697ms
2021-09-03 14:06:53.665 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-03 14:06:53.819 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-03 14:06:53.819 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-03 14:06:53.820 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-03 14:06:53.820 +02:00 [INF] Hosting environment: Development
2021-09-03 14:06:53.820 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-03 14:06:58.140 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-03 14:06:58.293 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-03 14:06:58.293 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-03 14:06:58.294 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-03 14:06:58.294 +02:00 [INF] Hosting environment: Development
2021-09-03 14:06:58.294 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-03 14:07:03.542 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 14:07:03.556 +02:00 [INF] CORS policy execution successful.
2021-09-03 14:07:03.559 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 17.9744ms
2021-09-03 14:07:03.561 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 14:07:03.571 +02:00 [INF] CORS policy execution successful.
2021-09-03 14:07:03.605 +02:00 [INF] Authorization was successful.
2021-09-03 14:07:03.606 +02:00 [INF] Executing endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 14:07:03.616 +02:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[ExampleApi.WeatherForecast] Get() on controller ExampleApi.Controllers.WeatherForecastController (ExampleApi).
2021-09-03 14:07:03.620 +02:00 [INF] Executing ObjectResult, writing value of type 'ExampleApi.WeatherForecast[]'.
2021-09-03 14:07:03.640 +02:00 [INF] Executed action ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi) in 21.6074ms
2021-09-03 14:07:03.642 +02:00 [INF] Executed endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 14:07:03.642 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 200 - application/json;+charset=utf-8 80.9527ms
2021-09-03 14:08:06.210 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 14:08:06.211 +02:00 [INF] Authorization was successful.
2021-09-03 14:08:06.211 +02:00 [INF] Executing endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 14:08:06.212 +02:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[ExampleApi.WeatherForecast] Get() on controller ExampleApi.Controllers.WeatherForecastController (ExampleApi).
2021-09-03 14:08:06.212 +02:00 [INF] Executing ObjectResult, writing value of type 'ExampleApi.WeatherForecast[]'.
2021-09-03 14:08:06.212 +02:00 [INF] Executed action ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi) in 0.7335ms
2021-09-03 14:08:06.213 +02:00 [INF] Executed endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 14:08:06.213 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 200 - application/json;+charset=utf-8 2.9211ms
2021-09-03 14:08:38.670 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 14:08:38.672 +02:00 [INF] Authorization was successful.
2021-09-03 14:08:38.672 +02:00 [INF] Executing endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 14:08:38.673 +02:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[ExampleApi.WeatherForecast] Get() on controller ExampleApi.Controllers.WeatherForecastController (ExampleApi).
2021-09-03 14:08:38.673 +02:00 [INF] Executing ObjectResult, writing value of type 'ExampleApi.WeatherForecast[]'.
2021-09-03 14:08:38.674 +02:00 [INF] Executed action ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi) in 1.4089ms
2021-09-03 14:08:38.674 +02:00 [INF] Executed endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 14:08:38.674 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 200 - application/json;+charset=utf-8 4.4914ms
2021-09-03 14:08:38.775 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/favicon.ico - -
2021-09-03 14:08:38.776 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/favicon.ico - - - 404 0 - 0.4747ms
2021-09-03 14:09:45.155 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 14:09:45.155 +02:00 [INF] Authorization was successful.
2021-09-03 14:09:45.156 +02:00 [INF] Executing endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 14:09:45.156 +02:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[ExampleApi.WeatherForecast] Get() on controller ExampleApi.Controllers.WeatherForecastController (ExampleApi).
2021-09-03 14:09:45.156 +02:00 [INF] Executing ObjectResult, writing value of type 'ExampleApi.WeatherForecast[]'.
2021-09-03 14:09:45.156 +02:00 [INF] Executed action ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi) in 0.4243ms
2021-09-03 14:09:45.156 +02:00 [INF] Executed endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 14:09:45.157 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 200 - application/json;+charset=utf-8 1.4110ms
2021-09-03 14:10:11.321 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 14:10:11.321 +02:00 [INF] CORS policy execution successful.
2021-09-03 14:10:11.321 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 0.3782ms
2021-09-03 14:10:11.322 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 14:10:11.323 +02:00 [INF] CORS policy execution successful.
2021-09-03 14:10:11.323 +02:00 [INF] Authorization was successful.
2021-09-03 14:10:11.323 +02:00 [INF] Executing endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 14:10:11.323 +02:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[ExampleApi.WeatherForecast] Get() on controller ExampleApi.Controllers.WeatherForecastController (ExampleApi).
2021-09-03 14:10:11.323 +02:00 [INF] Executing ObjectResult, writing value of type 'ExampleApi.WeatherForecast[]'.
2021-09-03 14:10:11.323 +02:00 [INF] Executed action ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi) in 0.2548ms
2021-09-03 14:10:11.323 +02:00 [INF] Executed endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 14:10:11.324 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 200 - application/json;+charset=utf-8 1.0863ms
2021-09-03 14:12:40.596 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 14:12:40.597 +02:00 [INF] CORS policy execution successful.
2021-09-03 14:12:40.597 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 0.5787ms
2021-09-03 14:12:40.598 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 14:12:40.598 +02:00 [INF] CORS policy execution successful.
2021-09-03 14:19:26.848 +02:00 [INF] Authorization was successful.
2021-09-03 14:19:26.848 +02:00 [INF] Executing endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 14:19:26.848 +02:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[ExampleApi.WeatherForecast] Get() on controller ExampleApi.Controllers.WeatherForecastController (ExampleApi).
2021-09-03 14:19:26.848 +02:00 [INF] Executing ObjectResult, writing value of type 'ExampleApi.WeatherForecast[]'.
2021-09-03 14:19:26.848 +02:00 [INF] Executed action ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi) in 0.4735ms
2021-09-03 14:19:26.849 +02:00 [INF] Executed endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 14:19:26.850 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 200 - application/json;+charset=utf-8 406251.5619ms
2021-09-03 14:24:53.705 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-03 14:24:53.858 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-03 14:24:53.858 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-03 14:24:53.858 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-03 14:24:53.858 +02:00 [INF] Hosting environment: Development
2021-09-03 14:24:53.858 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-03 14:24:59.300 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 14:24:59.314 +02:00 [INF] CORS policy execution successful.
2021-09-03 14:24:59.317 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 17.8453ms
2021-09-03 14:24:59.318 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 14:24:59.327 +02:00 [INF] CORS policy execution successful.
2021-09-03 14:24:59.642 +02:00 [INF] Successfully validated the token.
2021-09-03 14:24:59.646 +02:00 [INF] Authorization was successful.
2021-09-03 14:24:59.647 +02:00 [INF] Executing endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 14:24:59.656 +02:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[ExampleApi.WeatherForecast] Get() on controller ExampleApi.Controllers.WeatherForecastController (ExampleApi).
2021-09-03 14:24:59.661 +02:00 [INF] Executing ObjectResult, writing value of type 'ExampleApi.WeatherForecast[]'.
2021-09-03 14:24:59.680 +02:00 [INF] Executed action ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi) in 21.3527ms
2021-09-03 14:24:59.681 +02:00 [INF] Executed endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 14:24:59.683 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 200 - application/json;+charset=utf-8 364.7273ms
2021-09-03 14:25:18.188 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 14:25:18.189 +02:00 [INF] CORS policy execution successful.
2021-09-03 14:25:18.190 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 2.9722ms
2021-09-03 14:25:18.197 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 14:25:18.197 +02:00 [INF] CORS policy execution successful.
2021-09-03 14:25:18.199 +02:00 [INF] Successfully validated the token.
2021-09-03 14:26:21.787 +02:00 [INF] Authorization was successful.
2021-09-03 14:26:21.789 +02:00 [INF] Executing endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 14:26:21.792 +02:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[ExampleApi.WeatherForecast] Get() on controller ExampleApi.Controllers.WeatherForecastController (ExampleApi).
2021-09-03 14:26:21.792 +02:00 [INF] Executing ObjectResult, writing value of type 'ExampleApi.WeatherForecast[]'.
2021-09-03 14:26:21.792 +02:00 [INF] Executed action ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi) in 0.4698ms
2021-09-03 14:26:21.792 +02:00 [INF] Executed endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 14:26:21.792 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 200 - application/json;+charset=utf-8 63595.4479ms
2021-09-03 14:26:30.854 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-03 14:26:31.008 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-03 14:26:31.008 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-03 14:26:31.009 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-03 14:26:31.009 +02:00 [INF] Hosting environment: Development
2021-09-03 14:26:31.009 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-03 14:26:35.549 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 14:26:35.564 +02:00 [INF] CORS policy execution successful.
2021-09-03 14:26:35.566 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 18.2639ms
2021-09-03 14:26:35.568 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 14:26:35.578 +02:00 [INF] CORS policy execution successful.
2021-09-03 14:26:35.831 +02:00 [INF] Successfully validated the token.
2021-09-03 14:26:35.836 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-03 14:26:35.837 +02:00 [INF] AuthenticationScheme: bearer was forbidden.
2021-09-03 14:26:35.839 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 403 0 - 270.5284ms
2021-09-03 14:26:54.872 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 14:26:54.873 +02:00 [INF] CORS policy execution successful.
2021-09-03 14:26:54.873 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 1.1368ms
2021-09-03 14:26:54.877 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 14:26:54.877 +02:00 [INF] CORS policy execution successful.
2021-09-03 14:26:54.879 +02:00 [INF] Successfully validated the token.
2021-09-03 14:29:11.642 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-03 14:29:11.642 +02:00 [INF] AuthenticationScheme: bearer was forbidden.
2021-09-03 14:29:11.646 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 403 0 - 136768.8278ms
2021-09-03 14:30:23.320 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-03 14:30:23.474 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-03 14:30:23.474 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-03 14:30:23.474 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-03 14:30:23.474 +02:00 [INF] Hosting environment: Development
2021-09-03 14:30:23.474 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-03 14:30:25.120 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 14:30:25.134 +02:00 [INF] CORS policy execution successful.
2021-09-03 14:30:25.136 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 18.0207ms
2021-09-03 14:30:25.139 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 14:30:25.148 +02:00 [INF] CORS policy execution successful.
2021-09-03 14:30:25.399 +02:00 [INF] Successfully validated the token.
2021-09-03 14:30:25.403 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-03 14:30:25.404 +02:00 [INF] AuthenticationScheme: bearer was forbidden.
2021-09-03 14:30:25.406 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 403 0 - 267.4945ms
2021-09-03 14:30:27.119 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 14:30:27.119 +02:00 [INF] CORS policy execution successful.
2021-09-03 14:30:27.121 +02:00 [INF] Successfully validated the token.
2021-09-03 14:30:27.122 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-03 14:30:27.122 +02:00 [INF] AuthenticationScheme: bearer was forbidden.
2021-09-03 14:30:27.122 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 403 0 - 3.3733ms
2021-09-03 14:31:38.881 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-03 14:31:39.034 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-03 14:31:39.034 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-03 14:31:39.034 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-03 14:31:39.035 +02:00 [INF] Hosting environment: Development
2021-09-03 14:31:39.035 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-03 14:31:47.586 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 14:31:47.607 +02:00 [INF] CORS policy execution successful.
2021-09-03 14:31:47.613 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 28.2687ms
2021-09-03 14:31:47.620 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 14:31:47.632 +02:00 [INF] CORS policy execution successful.
2021-09-03 14:31:47.751 +02:00 [INF] Start processing HTTP request GET "https://localhost:5001/.well-known/openid-configuration"
2021-09-03 14:31:47.759 +02:00 [INF] Sending HTTP request GET "https://localhost:5001/.well-known/openid-configuration"
2021-09-03 14:31:47.828 +02:00 [INF] Received HTTP response headers after 66.1458ms - 200
2021-09-03 14:31:47.831 +02:00 [INF] End processing HTTP request after 83.0694ms - 200
2021-09-03 14:31:47.859 +02:00 [INF] Start processing HTTP request GET "https://localhost:5001/.well-known/jwks"
2021-09-03 14:31:47.859 +02:00 [INF] Sending HTTP request GET "https://localhost:5001/.well-known/jwks"
2021-09-03 14:31:47.862 +02:00 [INF] Received HTTP response headers after 2.576ms - 200
2021-09-03 14:31:47.862 +02:00 [INF] End processing HTTP request after 3.1279ms - 200
2021-09-03 14:31:47.888 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-03 14:32:30.581 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-03 14:32:30.594 +02:00 [INF] The response was successfully returned as a JSON document: {
  "error": "server_error",
  "error_description": "This resource server is currently unavailable.",
  "error_uri": "https://documentation.openiddict.com/errors/ID2092"
}.
2021-09-03 14:32:30.596 +02:00 [INF] AuthenticationScheme: OpenIddict.Validation.AspNetCore was challenged.
2021-09-03 14:32:30.598 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 400 175 application/json;charset=UTF-8 42977.3677ms
2021-09-03 14:32:55.763 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-03 14:32:55.917 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-03 14:32:55.917 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-03 14:32:55.918 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-03 14:32:55.918 +02:00 [INF] Hosting environment: Development
2021-09-03 14:32:55.918 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-03 14:33:05.185 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 14:33:05.207 +02:00 [INF] CORS policy execution successful.
2021-09-03 14:33:05.213 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 28.6828ms
2021-09-03 14:33:05.214 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 14:33:05.234 +02:00 [INF] CORS policy execution successful.
2021-09-03 14:33:05.598 +02:00 [INF] Successfully validated the token.
2021-09-03 14:33:46.295 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-03 14:33:46.297 +02:00 [INF] AuthenticationScheme: Bearer was forbidden.
2021-09-03 14:33:46.300 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 403 0 - 41085.9487ms
2021-09-03 15:25:53.883 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-03 15:25:54.045 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-03 15:25:54.045 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-03 15:25:54.045 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-03 15:25:54.045 +02:00 [INF] Hosting environment: Development
2021-09-03 15:25:54.045 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-03 15:26:24.347 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 15:26:24.364 +02:00 [INF] CORS policy execution successful.
2021-09-03 15:26:24.368 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 21.4580ms
2021-09-03 15:26:24.369 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 15:26:24.379 +02:00 [INF] CORS policy execution successful.
2021-09-03 15:26:24.644 +02:00 [INF] Successfully validated the token.
2021-09-03 15:26:24.648 +02:00 [INF] Authorization was successful.
2021-09-03 15:26:24.648 +02:00 [INF] Executing endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 15:26:24.658 +02:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[ExampleApi.WeatherForecast] Get() on controller ExampleApi.Controllers.WeatherForecastController (ExampleApi).
2021-09-03 15:26:24.662 +02:00 [INF] Executing ObjectResult, writing value of type 'ExampleApi.WeatherForecast[]'.
2021-09-03 15:26:24.683 +02:00 [INF] Executed action ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi) in 20.8327ms
2021-09-03 15:26:24.684 +02:00 [INF] Executed endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 15:26:24.687 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 200 - application/json;+charset=utf-8 317.5932ms
2021-09-03 16:30:11.875 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 16:30:11.880 +02:00 [INF] CORS policy execution successful.
2021-09-03 16:30:11.881 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 7.4257ms
2021-09-03 16:30:11.886 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 16:30:11.887 +02:00 [INF] CORS policy execution successful.
2021-09-03 16:30:11.895 +02:00 [INF] Successfully validated the token.
2021-09-03 16:30:11.896 +02:00 [INF] Authorization was successful.
2021-09-03 16:30:11.896 +02:00 [INF] Executing endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 16:30:11.897 +02:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[ExampleApi.WeatherForecast] Get() on controller ExampleApi.Controllers.WeatherForecastController (ExampleApi).
2021-09-03 16:30:11.899 +02:00 [INF] Executing ObjectResult, writing value of type 'ExampleApi.WeatherForecast[]'.
2021-09-03 16:30:11.900 +02:00 [INF] Executed action ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi) in 1.9127ms
2021-09-03 16:30:11.900 +02:00 [INF] Executed endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 16:30:11.900 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 200 - application/json;+charset=utf-8 13.5117ms
2021-09-03 16:36:50.412 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-03 16:36:50.566 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-03 16:36:50.566 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-03 16:36:50.566 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-03 16:36:50.566 +02:00 [INF] Hosting environment: Development
2021-09-03 16:36:50.566 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-03 16:36:59.831 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 16:36:59.848 +02:00 [INF] CORS policy execution successful.
2021-09-03 16:36:59.851 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 22.1395ms
2021-09-03 16:36:59.853 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 16:36:59.863 +02:00 [INF] CORS policy execution successful.
2021-09-03 16:37:00.126 +02:00 [INF] Successfully validated the token.
2021-09-03 16:37:00.130 +02:00 [INF] Authorization was successful.
2021-09-03 16:37:00.131 +02:00 [INF] Executing endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 16:37:00.141 +02:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[ExampleApi.WeatherForecast] Get() on controller ExampleApi.Controllers.WeatherForecastController (ExampleApi).
2021-09-03 16:37:00.145 +02:00 [INF] Executing ObjectResult, writing value of type 'ExampleApi.WeatherForecast[]'.
2021-09-03 16:37:00.166 +02:00 [INF] Executed action ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi) in 22.0084ms
2021-09-03 16:37:00.167 +02:00 [INF] Executed endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 16:37:00.168 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 200 - application/json;+charset=utf-8 315.4995ms
2021-09-03 16:37:46.082 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-03 16:37:46.243 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-03 16:37:46.243 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-03 16:37:46.243 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-03 16:37:46.243 +02:00 [INF] Hosting environment: Development
2021-09-03 16:37:46.243 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-03 16:37:51.696 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 16:37:51.712 +02:00 [INF] CORS policy execution successful.
2021-09-03 16:37:51.716 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 21.4261ms
2021-09-03 16:37:51.718 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 16:37:51.731 +02:00 [INF] CORS policy execution successful.
2021-09-03 16:37:51.993 +02:00 [INF] Successfully validated the token.
2021-09-03 16:37:51.998 +02:00 [INF] Authorization was successful.
2021-09-03 16:37:51.998 +02:00 [INF] Executing endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 16:37:52.008 +02:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[ExampleApi.WeatherForecast] Get() on controller ExampleApi.Controllers.WeatherForecastController (ExampleApi).
2021-09-03 16:37:52.012 +02:00 [INF] Executing ObjectResult, writing value of type 'ExampleApi.WeatherForecast[]'.
2021-09-03 16:37:52.032 +02:00 [INF] Executed action ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi) in 21.1664ms
2021-09-03 16:37:52.033 +02:00 [INF] Executed endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 16:37:52.035 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 200 - application/json;+charset=utf-8 316.6366ms
2021-09-03 16:38:07.112 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-03 16:38:07.277 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-03 16:38:07.277 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-03 16:38:07.277 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-03 16:38:07.277 +02:00 [INF] Hosting environment: Development
2021-09-03 16:38:07.277 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-03 16:38:10.142 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 16:38:10.157 +02:00 [INF] CORS policy execution successful.
2021-09-03 16:38:10.159 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 18.4623ms
2021-09-03 16:38:10.161 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 16:38:10.170 +02:00 [INF] CORS policy execution successful.
2021-09-03 16:38:10.241 +02:00 [INF] Start processing HTTP request GET "https://localhost:5001/.well-known/openid-configuration"
2021-09-03 16:38:10.249 +02:00 [INF] Sending HTTP request GET "https://localhost:5001/.well-known/openid-configuration"
2021-09-03 16:38:10.298 +02:00 [INF] Received HTTP response headers after 47.2137ms - 200
2021-09-03 16:38:10.300 +02:00 [INF] End processing HTTP request after 62.9005ms - 200
2021-09-03 16:38:10.322 +02:00 [INF] Start processing HTTP request GET "https://localhost:5001/.well-known/jwks"
2021-09-03 16:38:10.322 +02:00 [INF] Sending HTTP request GET "https://localhost:5001/.well-known/jwks"
2021-09-03 16:38:10.324 +02:00 [INF] Received HTTP response headers after 1.8458ms - 200
2021-09-03 16:38:10.324 +02:00 [INF] End processing HTTP request after 2.2267ms - 200
2021-09-03 16:38:10.341 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-03 16:38:10.345 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-03 16:38:10.358 +02:00 [INF] The response was successfully returned as a JSON document: {
  "error": "server_error",
  "error_description": "This resource server is currently unavailable.",
  "error_uri": "https://documentation.openiddict.com/errors/ID2092"
}.
2021-09-03 16:38:10.360 +02:00 [INF] AuthenticationScheme: OpenIddict.Validation.AspNetCore was challenged.
2021-09-03 16:38:10.362 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 400 175 application/json;charset=UTF-8 200.7564ms
2021-09-03 16:38:13.254 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 16:38:13.255 +02:00 [INF] CORS policy execution successful.
2021-09-03 16:38:13.257 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-03 16:38:13.257 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-03 16:38:13.257 +02:00 [INF] The response was successfully returned as a JSON document: {
  "error": "server_error",
  "error_description": "This resource server is currently unavailable.",
  "error_uri": "https://documentation.openiddict.com/errors/ID2092"
}.
2021-09-03 16:38:13.257 +02:00 [INF] AuthenticationScheme: OpenIddict.Validation.AspNetCore was challenged.
2021-09-03 16:38:13.257 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 400 175 application/json;charset=UTF-8 3.1069ms
2021-09-03 16:38:43.557 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-03 16:38:43.708 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-03 16:38:43.708 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-03 16:38:43.709 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-03 16:38:43.709 +02:00 [INF] Hosting environment: Development
2021-09-03 16:38:43.709 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-03 16:38:52.125 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 16:38:52.139 +02:00 [INF] CORS policy execution successful.
2021-09-03 16:38:52.142 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 18.4821ms
2021-09-03 16:38:52.144 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 16:38:52.152 +02:00 [INF] CORS policy execution successful.
2021-09-03 16:38:52.402 +02:00 [INF] Successfully validated the token.
2021-09-03 16:38:52.406 +02:00 [INF] Authorization was successful.
2021-09-03 16:38:52.406 +02:00 [INF] Executing endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 16:38:52.416 +02:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[ExampleApi.WeatherForecast] Get() on controller ExampleApi.Controllers.WeatherForecastController (ExampleApi).
2021-09-03 16:38:52.420 +02:00 [INF] Executing ObjectResult, writing value of type 'ExampleApi.WeatherForecast[]'.
2021-09-03 16:38:52.440 +02:00 [INF] Executed action ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi) in 21.4425ms
2021-09-03 16:38:52.441 +02:00 [INF] Executed endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 16:38:52.443 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 200 - application/json;+charset=utf-8 299.2198ms
2021-09-03 16:38:59.885 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-03 16:39:00.036 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-03 16:39:00.036 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-03 16:39:00.036 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-03 16:39:00.036 +02:00 [INF] Hosting environment: Development
2021-09-03 16:39:00.036 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-03 16:39:03.130 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 16:39:03.144 +02:00 [INF] CORS policy execution successful.
2021-09-03 16:39:03.148 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 18.7863ms
2021-09-03 16:39:03.150 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 16:39:03.159 +02:00 [INF] CORS policy execution successful.
2021-09-03 16:39:03.397 +02:00 [INF] Successfully validated the token.
2021-09-03 16:39:03.402 +02:00 [INF] Authorization was successful.
2021-09-03 16:39:03.402 +02:00 [INF] Executing endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 16:39:03.412 +02:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[ExampleApi.WeatherForecast] Get() on controller ExampleApi.Controllers.WeatherForecastController (ExampleApi).
2021-09-03 16:39:03.416 +02:00 [INF] Executing ObjectResult, writing value of type 'ExampleApi.WeatherForecast[]'.
2021-09-03 16:39:03.436 +02:00 [INF] Executed action ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi) in 20.9924ms
2021-09-03 16:39:03.438 +02:00 [INF] Executed endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 16:39:03.439 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 200 - application/json;+charset=utf-8 289.6256ms
2021-09-03 16:39:36.206 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 16:39:36.207 +02:00 [INF] CORS policy execution successful.
2021-09-03 16:39:36.207 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 1.7391ms
2021-09-03 16:39:36.211 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 16:39:36.211 +02:00 [INF] CORS policy execution successful.
2021-09-03 16:39:36.212 +02:00 [INF] Successfully validated the token.
2021-09-03 16:39:36.212 +02:00 [INF] Authorization was successful.
2021-09-03 16:39:36.212 +02:00 [INF] Executing endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 16:39:36.212 +02:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[ExampleApi.WeatherForecast] Get() on controller ExampleApi.Controllers.WeatherForecastController (ExampleApi).
2021-09-03 16:39:36.213 +02:00 [INF] Executing ObjectResult, writing value of type 'ExampleApi.WeatherForecast[]'.
2021-09-03 16:39:36.213 +02:00 [INF] Executed action ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi) in 0.4658ms
2021-09-03 16:39:36.213 +02:00 [INF] Executed endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 16:39:36.213 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 200 - application/json;+charset=utf-8 2.3390ms
2021-09-03 16:40:03.049 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 16:40:03.049 +02:00 [INF] CORS policy execution successful.
2021-09-03 16:40:03.050 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 0.4856ms
2021-09-03 16:40:03.051 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 16:40:03.051 +02:00 [INF] CORS policy execution successful.
2021-09-03 16:40:03.053 +02:00 [INF] Successfully validated the token.
2021-09-03 16:40:03.053 +02:00 [INF] Authorization was successful.
2021-09-03 16:40:03.053 +02:00 [INF] Executing endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 16:40:03.054 +02:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[ExampleApi.WeatherForecast] Get() on controller ExampleApi.Controllers.WeatherForecastController (ExampleApi).
2021-09-03 16:40:03.054 +02:00 [INF] Executing ObjectResult, writing value of type 'ExampleApi.WeatherForecast[]'.
2021-09-03 16:40:03.054 +02:00 [INF] Executed action ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi) in 0.2725ms
2021-09-03 16:40:03.054 +02:00 [INF] Executed endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 16:40:03.054 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 200 - application/json;+charset=utf-8 3.0595ms
2021-09-03 16:44:27.028 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-03 16:44:27.182 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-03 16:44:27.182 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-03 16:44:27.182 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-03 16:44:27.182 +02:00 [INF] Hosting environment: Development
2021-09-03 16:44:27.182 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-03 16:49:54.157 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 16:49:54.221 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-03 16:49:54.224 +02:00 [INF] AuthenticationScheme: Bearer was challenged.
2021-09-03 16:49:54.226 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 401 0 - 70.6677ms
2021-09-03 16:50:37.215 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 16:50:37.422 +02:00 [INF] Successfully validated the token.
2021-09-03 16:50:37.424 +02:00 [INF] Authorization was successful.
2021-09-03 16:50:37.424 +02:00 [INF] Executing endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 16:50:37.434 +02:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[ExampleApi.WeatherForecast] Get() on controller ExampleApi.Controllers.WeatherForecastController (ExampleApi).
2021-09-03 16:50:37.438 +02:00 [INF] Executing ObjectResult, writing value of type 'ExampleApi.WeatherForecast[]'.
2021-09-03 16:50:37.457 +02:00 [INF] Executed action ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi) in 20.7196ms
2021-09-03 16:50:37.458 +02:00 [INF] Executed endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 16:50:37.460 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 200 - application/json;+charset=utf-8 244.6574ms
2021-09-03 16:51:09.660 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 16:51:09.663 +02:00 [INF] Successfully validated the token.
2021-09-03 16:51:09.664 +02:00 [INF] Authorization was successful.
2021-09-03 16:51:09.664 +02:00 [INF] Executing endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 16:51:09.664 +02:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[ExampleApi.WeatherForecast] Get() on controller ExampleApi.Controllers.WeatherForecastController (ExampleApi).
2021-09-03 16:51:09.664 +02:00 [INF] Executing ObjectResult, writing value of type 'ExampleApi.WeatherForecast[]'.
2021-09-03 16:51:09.665 +02:00 [INF] Executed action ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi) in 0.6417ms
2021-09-03 16:51:09.665 +02:00 [INF] Executed endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 16:51:09.665 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 200 - application/json;+charset=utf-8 4.6022ms
2021-09-03 16:51:14.666 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 16:51:14.668 +02:00 [INF] CORS policy execution successful.
2021-09-03 16:51:14.668 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 2.1165ms
2021-09-03 16:51:14.671 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 16:51:14.672 +02:00 [INF] CORS policy execution successful.
2021-09-03 16:51:14.672 +02:00 [INF] Successfully validated the token.
2021-09-03 16:51:14.672 +02:00 [INF] Authorization was successful.
2021-09-03 16:51:14.672 +02:00 [INF] Executing endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 16:51:14.673 +02:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[ExampleApi.WeatherForecast] Get() on controller ExampleApi.Controllers.WeatherForecastController (ExampleApi).
2021-09-03 16:51:14.673 +02:00 [INF] Executing ObjectResult, writing value of type 'ExampleApi.WeatherForecast[]'.
2021-09-03 16:51:14.674 +02:00 [INF] Executed action ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi) in 0.9738ms
2021-09-03 16:51:14.674 +02:00 [INF] Executed endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 16:51:14.674 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 200 - application/json;+charset=utf-8 2.4357ms
2021-09-03 16:51:19.518 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 16:51:19.519 +02:00 [INF] CORS policy execution successful.
2021-09-03 16:51:19.519 +02:00 [INF] Successfully validated the token.
2021-09-03 16:51:19.520 +02:00 [INF] Authorization was successful.
2021-09-03 16:51:19.520 +02:00 [INF] Executing endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 16:51:19.520 +02:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[ExampleApi.WeatherForecast] Get() on controller ExampleApi.Controllers.WeatherForecastController (ExampleApi).
2021-09-03 16:51:19.520 +02:00 [INF] Executing ObjectResult, writing value of type 'ExampleApi.WeatherForecast[]'.
2021-09-03 16:51:19.520 +02:00 [INF] Executed action ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi) in 0.3451ms
2021-09-03 16:51:19.520 +02:00 [INF] Executed endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 16:51:19.520 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 200 - application/json;+charset=utf-8 2.0487ms
2021-09-03 16:51:48.419 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 16:51:48.420 +02:00 [INF] Successfully validated the token.
2021-09-03 16:51:48.420 +02:00 [INF] Authorization was successful.
2021-09-03 16:51:48.420 +02:00 [INF] Executing endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 16:51:48.420 +02:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[ExampleApi.WeatherForecast] Get() on controller ExampleApi.Controllers.WeatherForecastController (ExampleApi).
2021-09-03 16:51:48.420 +02:00 [INF] Executing ObjectResult, writing value of type 'ExampleApi.WeatherForecast[]'.
2021-09-03 16:51:48.420 +02:00 [INF] Executed action ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi) in 0.2075ms
2021-09-03 16:51:48.420 +02:00 [INF] Executed endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 16:51:48.420 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 200 - application/json;+charset=utf-8 1.3392ms
2021-09-03 16:52:10.846 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 16:52:10.846 +02:00 [INF] CORS policy execution successful.
2021-09-03 16:52:10.847 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 0.4388ms
2021-09-03 16:52:10.848 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 16:52:10.848 +02:00 [INF] CORS policy execution successful.
2021-09-03 16:52:10.849 +02:00 [INF] Successfully validated the token.
2021-09-03 16:52:10.849 +02:00 [INF] Authorization was successful.
2021-09-03 16:52:10.849 +02:00 [INF] Executing endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 16:52:10.850 +02:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[ExampleApi.WeatherForecast] Get() on controller ExampleApi.Controllers.WeatherForecastController (ExampleApi).
2021-09-03 16:52:10.850 +02:00 [INF] Executing ObjectResult, writing value of type 'ExampleApi.WeatherForecast[]'.
2021-09-03 16:52:10.850 +02:00 [INF] Executed action ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi) in 0.3031ms
2021-09-03 16:52:10.850 +02:00 [INF] Executed endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 16:52:10.850 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 200 - application/json;+charset=utf-8 1.9217ms
2021-09-03 16:52:20.042 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 16:52:20.042 +02:00 [INF] CORS policy execution successful.
2021-09-03 16:52:20.043 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 0.2841ms
2021-09-03 16:52:20.044 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 16:52:20.044 +02:00 [INF] CORS policy execution successful.
2021-09-03 16:52:20.057 +02:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenDecryptionFailedException: IDX10609: Decryption failed. No Keys tried: token: 'System.String'.
   at Microsoft.IdentityModel.JsonWebTokens.JwtTokenUtilities.ValidateDecryption(JwtTokenDecryptionParameters decryptionParameters, Boolean decryptionSucceeded, Boolean algorithmNotSupportedByCryptoProvider, StringBuilder exceptionStrings, StringBuilder keysAttempted)
   at Microsoft.IdentityModel.JsonWebTokens.JwtTokenUtilities.DecryptJwtToken(SecurityToken jwtToken, TokenValidationParameters validationParameters, JwtTokenDecryptionParameters decryptionParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.DecryptToken(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2021-09-03 16:52:20.067 +02:00 [INF] Bearer was not authenticated. Failure message: IDX10609: Decryption failed. No Keys tried: token: 'System.String'.
2021-09-03 16:52:20.067 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-03 16:52:20.069 +02:00 [INF] AuthenticationScheme: Bearer was challenged.
2021-09-03 16:52:20.069 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 401 0 - 25.1990ms
2021-09-03 16:52:52.580 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 16:52:52.581 +02:00 [INF] Successfully validated the token.
2021-09-03 16:52:52.581 +02:00 [INF] Authorization was successful.
2021-09-03 16:52:52.581 +02:00 [INF] Executing endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 16:52:52.581 +02:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[ExampleApi.WeatherForecast] Get() on controller ExampleApi.Controllers.WeatherForecastController (ExampleApi).
2021-09-03 16:52:52.581 +02:00 [INF] Executing ObjectResult, writing value of type 'ExampleApi.WeatherForecast[]'.
2021-09-03 16:52:52.581 +02:00 [INF] Executed action ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi) in 0.25ms
2021-09-03 16:52:52.581 +02:00 [INF] Executed endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 16:52:52.581 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 200 - application/json;+charset=utf-8 1.4587ms
2021-09-03 16:52:59.914 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 16:52:59.915 +02:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenDecryptionFailedException: IDX10609: Decryption failed. No Keys tried: token: 'System.String'.
   at Microsoft.IdentityModel.JsonWebTokens.JwtTokenUtilities.ValidateDecryption(JwtTokenDecryptionParameters decryptionParameters, Boolean decryptionSucceeded, Boolean algorithmNotSupportedByCryptoProvider, StringBuilder exceptionStrings, StringBuilder keysAttempted)
   at Microsoft.IdentityModel.JsonWebTokens.JwtTokenUtilities.DecryptJwtToken(SecurityToken jwtToken, TokenValidationParameters validationParameters, JwtTokenDecryptionParameters decryptionParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.DecryptToken(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2021-09-03 16:52:59.915 +02:00 [INF] Bearer was not authenticated. Failure message: IDX10609: Decryption failed. No Keys tried: token: 'System.String'.
2021-09-03 16:52:59.915 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-03 16:52:59.915 +02:00 [INF] AuthenticationScheme: Bearer was challenged.
2021-09-03 16:52:59.915 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 401 0 - 1.0265ms
2021-09-03 16:54:06.570 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-03 16:54:06.719 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-03 16:54:06.719 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-03 16:54:06.719 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-03 16:54:06.719 +02:00 [INF] Hosting environment: Development
2021-09-03 16:54:06.719 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-03 16:54:26.018 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 16:54:26.032 +02:00 [INF] CORS policy execution successful.
2021-09-03 16:54:26.035 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 17.6451ms
2021-09-03 16:54:26.036 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 16:54:26.046 +02:00 [INF] CORS policy execution successful.
2021-09-03 16:54:26.105 +02:00 [INF] Start processing HTTP request GET "https://localhost:5001/.well-known/openid-configuration"
2021-09-03 16:54:26.113 +02:00 [INF] Sending HTTP request GET "https://localhost:5001/.well-known/openid-configuration"
2021-09-03 16:54:26.161 +02:00 [INF] Received HTTP response headers after 45.5528ms - 200
2021-09-03 16:54:26.163 +02:00 [INF] End processing HTTP request after 60.146ms - 200
2021-09-03 16:54:26.180 +02:00 [INF] Start processing HTTP request GET "https://localhost:5001/.well-known/jwks"
2021-09-03 16:54:26.180 +02:00 [INF] Sending HTTP request GET "https://localhost:5001/.well-known/jwks"
2021-09-03 16:54:26.183 +02:00 [INF] Received HTTP response headers after 2.5156ms - 200
2021-09-03 16:54:26.183 +02:00 [INF] End processing HTTP request after 2.8715ms - 200
2021-09-03 16:54:26.199 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-03 16:54:26.203 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-03 16:54:26.215 +02:00 [INF] The response was successfully returned as a JSON document: {
  "error": "server_error",
  "error_description": "This resource server is currently unavailable.",
  "error_uri": "https://documentation.openiddict.com/errors/ID2092"
}.
2021-09-03 16:54:26.217 +02:00 [INF] AuthenticationScheme: OpenIddict.Validation.AspNetCore was challenged.
2021-09-03 16:54:26.218 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 400 175 application/json;charset=UTF-8 182.0973ms
2021-09-03 16:55:17.437 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 16:55:17.438 +02:00 [INF] CORS policy execution successful.
2021-09-03 16:55:17.438 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 1.7362ms
2021-09-03 16:55:17.442 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 16:55:17.442 +02:00 [INF] CORS policy execution successful.
2021-09-03 16:55:17.444 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-03 16:55:17.444 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-03 16:55:17.444 +02:00 [INF] The response was successfully returned as a JSON document: {
  "error": "server_error",
  "error_description": "This resource server is currently unavailable.",
  "error_uri": "https://documentation.openiddict.com/errors/ID2092"
}.
2021-09-03 16:55:17.445 +02:00 [INF] AuthenticationScheme: OpenIddict.Validation.AspNetCore was challenged.
2021-09-03 16:55:17.445 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 400 175 application/json;charset=UTF-8 2.7208ms
2021-09-03 16:56:00.627 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-03 16:56:00.781 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-03 16:56:00.781 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-03 16:56:00.782 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-03 16:56:00.782 +02:00 [INF] Hosting environment: Development
2021-09-03 16:56:00.782 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-03 16:56:02.038 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 16:56:02.051 +02:00 [INF] CORS policy execution successful.
2021-09-03 16:56:02.054 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 18.1812ms
2021-09-03 16:56:02.056 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 16:56:02.065 +02:00 [INF] CORS policy execution successful.
2021-09-03 16:56:02.319 +02:00 [INF] Successfully validated the token.
2021-09-03 16:56:02.323 +02:00 [INF] Authorization was successful.
2021-09-03 16:56:02.324 +02:00 [INF] Executing endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 16:56:02.333 +02:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[ExampleApi.WeatherForecast] Get() on controller ExampleApi.Controllers.WeatherForecastController (ExampleApi).
2021-09-03 16:56:02.338 +02:00 [INF] Executing ObjectResult, writing value of type 'ExampleApi.WeatherForecast[]'.
2021-09-03 16:56:02.358 +02:00 [INF] Executed action ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi) in 21.5168ms
2021-09-03 16:56:02.359 +02:00 [INF] Executed endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 16:56:02.360 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 200 - application/json;+charset=utf-8 304.6074ms
2021-09-03 17:27:34.276 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-03 17:27:34.430 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-03 17:27:34.431 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-03 17:27:34.431 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-03 17:27:34.431 +02:00 [INF] Hosting environment: Development
2021-09-03 17:27:34.431 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-03 17:27:35.999 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 17:27:36.019 +02:00 [INF] CORS policy execution successful.
2021-09-03 17:27:36.023 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 25.0600ms
2021-09-03 17:27:36.024 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 17:27:36.034 +02:00 [INF] CORS policy execution successful.
2021-09-03 17:27:36.056 +02:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Authorization entry validation cannot be enabled when using introspection.
   at OpenIddict.Validation.OpenIddictValidationConfiguration.PostConfigure(String name, OpenIddictValidationOptions options)
   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
   at Microsoft.Extensions.Options.OptionsMonitor`1.<>c__DisplayClass11_0.<Get>b__0()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
   at System.Lazy`1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)
   at System.Lazy`1.CreateValue()
   at System.Lazy`1.get_Value()
   at Microsoft.Extensions.Options.OptionsCache`1.GetOrAdd(String name, Func`1 createOptions)
   at Microsoft.Extensions.Options.OptionsMonitor`1.Get(String name)
   at Microsoft.Extensions.Options.OptionsMonitor`1.get_CurrentValue()
   at OpenIddict.Validation.OpenIddictValidationFactory.CreateTransactionAsync()
   at OpenIddict.Validation.AspNetCore.OpenIddictValidationAspNetCoreHandler.HandleRequestAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2021-09-03 17:27:36.074 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 500 - text/plain 49.5406ms
2021-09-03 17:28:14.715 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-03 17:28:14.874 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-03 17:28:14.874 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-03 17:28:14.874 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-03 17:28:14.874 +02:00 [INF] Hosting environment: Development
2021-09-03 17:28:14.874 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-03 17:29:57.512 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 17:29:57.526 +02:00 [INF] CORS policy execution successful.
2021-09-03 17:29:57.529 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 17.9658ms
2021-09-03 17:29:57.531 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 17:29:57.540 +02:00 [INF] CORS policy execution successful.
2021-09-03 17:29:57.802 +02:00 [INF] Successfully validated the token.
2021-09-03 17:29:57.806 +02:00 [INF] Authorization was successful.
2021-09-03 17:29:57.807 +02:00 [INF] Executing endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 17:29:57.817 +02:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[ExampleApi.WeatherForecast] Get() on controller ExampleApi.Controllers.WeatherForecastController (ExampleApi).
2021-09-03 17:29:57.821 +02:00 [INF] Executing ObjectResult, writing value of type 'ExampleApi.WeatherForecast[]'.
2021-09-03 17:29:57.841 +02:00 [INF] Executed action ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi) in 21.7022ms
2021-09-03 17:29:57.842 +02:00 [INF] Executed endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 17:29:57.844 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 200 - application/json;+charset=utf-8 313.0273ms
2021-09-03 17:36:01.548 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-03 17:36:01.706 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-03 17:36:01.706 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-03 17:36:01.706 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-03 17:36:01.707 +02:00 [INF] Hosting environment: Development
2021-09-03 17:36:01.707 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-03 17:36:19.033 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 17:36:19.053 +02:00 [INF] CORS policy execution successful.
2021-09-03 17:36:19.056 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 25.1679ms
2021-09-03 17:36:19.067 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 17:36:19.078 +02:00 [INF] CORS policy execution successful.
2021-09-03 17:36:19.195 +02:00 [INF] Start processing HTTP request GET "https://localhost:5001/.well-known/openid-configuration"
2021-09-03 17:36:19.204 +02:00 [INF] Sending HTTP request GET "https://localhost:5001/.well-known/openid-configuration"
2021-09-03 17:36:19.266 +02:00 [INF] Received HTTP response headers after 59.0927ms - 200
2021-09-03 17:36:19.270 +02:00 [INF] End processing HTTP request after 78.2018ms - 200
2021-09-03 17:36:19.296 +02:00 [INF] Start processing HTTP request GET "https://localhost:5001/.well-known/jwks"
2021-09-03 17:36:19.296 +02:00 [INF] Sending HTTP request GET "https://localhost:5001/.well-known/jwks"
2021-09-03 17:36:19.299 +02:00 [INF] Received HTTP response headers after 2.848ms - 200
2021-09-03 17:36:19.300 +02:00 [INF] End processing HTTP request after 3.4098ms - 200
2021-09-03 17:36:19.324 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-03 17:37:28.303 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-03 17:37:28.324 +02:00 [INF] The response was successfully returned as a JSON document: {
  "error": "server_error",
  "error_description": "This resource server is currently unavailable.",
  "error_uri": "https://documentation.openiddict.com/errors/ID2092"
}.
2021-09-03 17:37:28.325 +02:00 [INF] AuthenticationScheme: OpenIddict.Validation.AspNetCore was challenged.
2021-09-03 17:37:28.327 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 400 175 application/json;charset=UTF-8 69260.0109ms
2021-09-03 17:43:16.534 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 17:43:16.535 +02:00 [INF] CORS policy execution successful.
2021-09-03 17:43:16.536 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 2.5797ms
2021-09-03 17:43:16.540 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 17:43:16.540 +02:00 [INF] CORS policy execution successful.
2021-09-03 17:43:16.543 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-03 17:45:29.244 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-03 17:45:29.248 +02:00 [INF] The response was successfully returned as a JSON document: {
  "error": "server_error",
  "error_description": "This resource server is currently unavailable.",
  "error_uri": "https://documentation.openiddict.com/errors/ID2092"
}.
2021-09-03 17:45:29.251 +02:00 [INF] AuthenticationScheme: OpenIddict.Validation.AspNetCore was challenged.
2021-09-03 17:45:29.254 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 400 175 application/json;charset=UTF-8 132712.8918ms
2021-09-03 17:45:29.254 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 17:45:29.257 +02:00 [INF] CORS policy execution successful.
2021-09-03 17:45:29.260 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 5.3922ms
2021-09-03 17:45:29.269 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 17:45:29.269 +02:00 [INF] CORS policy execution successful.
2021-09-03 17:45:29.270 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 2.6872ms
2021-09-03 17:45:29.272 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 17:45:29.272 +02:00 [INF] CORS policy execution successful.
2021-09-03 17:45:29.273 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-03 17:45:30.421 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-03 17:45:30.421 +02:00 [INF] The response was successfully returned as a JSON document: {
  "error": "server_error",
  "error_description": "This resource server is currently unavailable.",
  "error_uri": "https://documentation.openiddict.com/errors/ID2092"
}.
2021-09-03 17:45:30.421 +02:00 [INF] AuthenticationScheme: OpenIddict.Validation.AspNetCore was challenged.
2021-09-03 17:45:30.421 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 400 175 application/json;charset=UTF-8 1149.7845ms
2021-09-03 17:45:34.373 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 17:45:34.373 +02:00 [INF] CORS policy execution successful.
2021-09-03 17:45:34.374 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 0.6030ms
2021-09-03 17:45:34.375 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 17:45:34.375 +02:00 [INF] CORS policy execution successful.
2021-09-03 17:45:34.376 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-03 17:46:10.091 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-03 17:46:10.091 +02:00 [INF] The response was successfully returned as a JSON document: {
  "error": "server_error",
  "error_description": "This resource server is currently unavailable.",
  "error_uri": "https://documentation.openiddict.com/errors/ID2092"
}.
2021-09-03 17:46:10.091 +02:00 [INF] AuthenticationScheme: OpenIddict.Validation.AspNetCore was challenged.
2021-09-03 17:46:10.092 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 400 175 application/json;charset=UTF-8 35717.0189ms
2021-09-03 17:57:25.311 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-03 17:57:25.477 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-03 17:57:25.478 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-03 17:57:25.478 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-03 17:57:25.478 +02:00 [INF] Hosting environment: Development
2021-09-03 17:57:25.478 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-03 17:57:38.581 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 17:57:38.595 +02:00 [INF] CORS policy execution successful.
2021-09-03 17:57:38.598 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 18.3340ms
2021-09-03 17:57:38.599 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 17:57:38.608 +02:00 [INF] CORS policy execution successful.
2021-09-03 17:57:42.782 +02:00 [ERR] Exception occurred while processing message.
System.InvalidOperationException: IDX20803: Unable to obtain configuration from: 'System.String'.
 ---> System.IO.IOException: IDX20804: Unable to retrieve document from: 'System.String'.
 ---> System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it. (localhost:5001)
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|283_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.DefaultConnectAsync(SocketsHttpConnectionContext context, CancellationToken cancellationToken)
   at System.Net.Http.ConnectHelper.ConnectAsync(Func`3 callback, DnsEndPoint endPoint, HttpRequestMessage requestMessage, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.ConnectAsync(Func`3 callback, DnsEndPoint endPoint, HttpRequestMessage requestMessage, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.DiagnosticsHandler.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.SendAsyncCore(HttpRequestMessage request, HttpCompletionOption completionOption, Boolean async, Boolean emitTelemetryStartStop, CancellationToken cancellationToken)
   at Microsoft.IdentityModel.Protocols.HttpDocumentRetriever.GetDocumentAsync(String address, CancellationToken cancel)
   --- End of inner exception stack trace ---
   at Microsoft.IdentityModel.Protocols.HttpDocumentRetriever.GetDocumentAsync(String address, CancellationToken cancel)
   at Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfigurationRetriever.GetAsync(String address, IDocumentRetriever retriever, CancellationToken cancel)
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   --- End of inner exception stack trace ---
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2021-09-03 17:57:42.801 +02:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: IDX20803: Unable to obtain configuration from: 'System.String'.
 ---> System.IO.IOException: IDX20804: Unable to retrieve document from: 'System.String'.
 ---> System.Net.Http.HttpRequestException: No connection could be made because the target machine actively refused it. (localhost:5001)
 ---> System.Net.Sockets.SocketException (10061): No connection could be made because the target machine actively refused it.
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|283_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.DefaultConnectAsync(SocketsHttpConnectionContext context, CancellationToken cancellationToken)
   at System.Net.Http.ConnectHelper.ConnectAsync(Func`3 callback, DnsEndPoint endPoint, HttpRequestMessage requestMessage, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at System.Net.Http.ConnectHelper.ConnectAsync(Func`3 callback, DnsEndPoint endPoint, HttpRequestMessage requestMessage, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)
   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.DiagnosticsHandler.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)
   at System.Net.Http.HttpClient.SendAsyncCore(HttpRequestMessage request, HttpCompletionOption completionOption, Boolean async, Boolean emitTelemetryStartStop, CancellationToken cancellationToken)
   at Microsoft.IdentityModel.Protocols.HttpDocumentRetriever.GetDocumentAsync(String address, CancellationToken cancel)
   --- End of inner exception stack trace ---
   at Microsoft.IdentityModel.Protocols.HttpDocumentRetriever.GetDocumentAsync(String address, CancellationToken cancel)
   at Microsoft.IdentityModel.Protocols.OpenIdConnect.OpenIdConnectConfigurationRetriever.GetAsync(String address, IDocumentRetriever retriever, CancellationToken cancel)
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   --- End of inner exception stack trace ---
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2021-09-03 17:57:42.809 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 500 - text/plain 4209.6474ms
2021-09-03 17:57:46.957 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 17:57:46.958 +02:00 [INF] CORS policy execution successful.
2021-09-03 17:57:46.958 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 1.4750ms
2021-09-03 17:57:46.964 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 17:57:46.964 +02:00 [INF] CORS policy execution successful.
2021-09-03 17:57:46.964 +02:00 [ERR] Exception occurred while processing message.
System.InvalidOperationException: IDX20803: Unable to obtain configuration from: 'System.String'.
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2021-09-03 17:57:46.965 +02:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: IDX20803: Unable to obtain configuration from: 'System.String'.
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2021-09-03 17:57:46.966 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 500 - text/plain 2.6630ms
2021-09-03 17:59:24.796 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 17:59:24.796 +02:00 [INF] CORS policy execution successful.
2021-09-03 17:59:24.797 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 0.5625ms
2021-09-03 17:59:24.799 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 17:59:24.799 +02:00 [INF] CORS policy execution successful.
2021-09-03 17:59:24.802 +02:00 [ERR] Exception occurred while processing message.
System.InvalidOperationException: IDX20803: Unable to obtain configuration from: 'System.String'.
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2021-09-03 17:59:24.803 +02:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: IDX20803: Unable to obtain configuration from: 'System.String'.
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2021-09-03 17:59:24.804 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 500 - text/plain 5.2071ms
2021-09-03 17:59:35.079 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 17:59:35.079 +02:00 [INF] CORS policy execution successful.
2021-09-03 17:59:35.080 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 0.5784ms
2021-09-03 17:59:35.081 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 17:59:35.082 +02:00 [INF] CORS policy execution successful.
2021-09-03 17:59:35.082 +02:00 [ERR] Exception occurred while processing message.
System.InvalidOperationException: IDX20803: Unable to obtain configuration from: 'System.String'.
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2021-09-03 17:59:35.082 +02:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: IDX20803: Unable to obtain configuration from: 'System.String'.
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2021-09-03 17:59:35.084 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 500 - text/plain 2.5141ms
2021-09-03 18:00:09.928 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 18:00:09.928 +02:00 [INF] CORS policy execution successful.
2021-09-03 18:00:09.928 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 0.4635ms
2021-09-03 18:00:09.930 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 18:00:09.930 +02:00 [INF] CORS policy execution successful.
2021-09-03 18:00:09.930 +02:00 [ERR] Exception occurred while processing message.
System.InvalidOperationException: IDX20803: Unable to obtain configuration from: 'System.String'.
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2021-09-03 18:00:09.930 +02:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: IDX20803: Unable to obtain configuration from: 'System.String'.
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2021-09-03 18:00:09.931 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 500 - text/plain 1.4743ms
2021-09-03 18:00:36.312 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 18:00:36.314 +02:00 [INF] CORS policy execution successful.
2021-09-03 18:00:36.314 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 2.6734ms
2021-09-03 18:00:36.316 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 18:00:36.316 +02:00 [INF] CORS policy execution successful.
2021-09-03 18:00:36.316 +02:00 [ERR] Exception occurred while processing message.
System.InvalidOperationException: IDX20803: Unable to obtain configuration from: 'System.String'.
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2021-09-03 18:00:36.317 +02:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: IDX20803: Unable to obtain configuration from: 'System.String'.
   at Microsoft.IdentityModel.Protocols.ConfigurationManager`1.GetConfigurationAsync(CancellationToken cancel)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationHandler`1.AuthenticateAsync()
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2021-09-03 18:00:36.319 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 500 - text/plain 2.9387ms
2021-09-03 18:00:44.760 +02:00 [INF] Application is shutting down...
2021-09-03 18:00:51.573 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-03 18:00:51.731 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-03 18:00:51.731 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-03 18:00:51.731 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-03 18:00:51.731 +02:00 [INF] Hosting environment: Development
2021-09-03 18:00:51.731 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-03 18:02:26.843 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 18:02:26.857 +02:00 [INF] CORS policy execution successful.
2021-09-03 18:02:26.860 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 18.4494ms
2021-09-03 18:02:26.862 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 18:02:26.872 +02:00 [INF] CORS policy execution successful.
2021-09-03 18:02:27.119 +02:00 [INF] Successfully validated the token.
2021-09-03 18:02:27.123 +02:00 [INF] Authorization was successful.
2021-09-03 18:02:27.124 +02:00 [INF] Executing endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 18:02:27.134 +02:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[ExampleApi.WeatherForecast] Get() on controller ExampleApi.Controllers.WeatherForecastController (ExampleApi).
2021-09-03 18:02:27.138 +02:00 [INF] Executing ObjectResult, writing value of type 'ExampleApi.WeatherForecast[]'.
2021-09-03 18:02:27.158 +02:00 [INF] Executed action ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi) in 21.2861ms
2021-09-03 18:02:27.159 +02:00 [INF] Executed endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 18:02:27.161 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 200 - application/json;+charset=utf-8 299.1135ms
2021-09-03 18:03:10.572 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 18:03:10.572 +02:00 [INF] CORS policy execution successful.
2021-09-03 18:03:10.573 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 1.3502ms
2021-09-03 18:03:10.578 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 18:03:10.578 +02:00 [INF] CORS policy execution successful.
2021-09-03 18:03:10.579 +02:00 [INF] Successfully validated the token.
2021-09-03 18:03:10.580 +02:00 [INF] Authorization was successful.
2021-09-03 18:03:10.580 +02:00 [INF] Executing endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 18:03:10.580 +02:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[ExampleApi.WeatherForecast] Get() on controller ExampleApi.Controllers.WeatherForecastController (ExampleApi).
2021-09-03 18:03:10.581 +02:00 [INF] Executing ObjectResult, writing value of type 'ExampleApi.WeatherForecast[]'.
2021-09-03 18:03:10.581 +02:00 [INF] Executed action ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi) in 0.6027ms
2021-09-03 18:03:10.581 +02:00 [INF] Executed endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 18:03:10.581 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 200 - application/json;+charset=utf-8 3.7766ms
2021-09-03 18:04:28.565 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-03 18:04:28.722 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-03 18:04:28.722 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-03 18:04:28.722 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-03 18:04:28.722 +02:00 [INF] Hosting environment: Development
2021-09-03 18:04:28.722 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-03 18:04:41.331 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 18:04:41.352 +02:00 [INF] CORS policy execution successful.
2021-09-03 18:04:41.357 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 26.6535ms
2021-09-03 18:04:41.358 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 18:04:41.377 +02:00 [INF] CORS policy execution successful.
2021-09-03 18:04:41.492 +02:00 [INF] Start processing HTTP request GET "https://localhost:5001/.well-known/openid-configuration"
2021-09-03 18:04:41.500 +02:00 [INF] Sending HTTP request GET "https://localhost:5001/.well-known/openid-configuration"
2021-09-03 18:04:41.562 +02:00 [INF] Received HTTP response headers after 60.3559ms - 200
2021-09-03 18:04:41.564 +02:00 [INF] End processing HTTP request after 76.5039ms - 200
2021-09-03 18:04:41.592 +02:00 [INF] Start processing HTTP request GET "https://localhost:5001/.well-known/jwks"
2021-09-03 18:04:41.592 +02:00 [INF] Sending HTTP request GET "https://localhost:5001/.well-known/jwks"
2021-09-03 18:04:41.597 +02:00 [INF] Received HTTP response headers after 4.7956ms - 200
2021-09-03 18:04:41.597 +02:00 [INF] End processing HTTP request after 5.221ms - 200
2021-09-03 18:04:41.621 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-03 18:11:18.450 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-03 18:11:18.464 +02:00 [INF] The response was successfully returned as a JSON document: {
  "error": "server_error",
  "error_description": "This resource server is currently unavailable.",
  "error_uri": "https://documentation.openiddict.com/errors/ID2092"
}.
2021-09-03 18:11:18.465 +02:00 [INF] AuthenticationScheme: OpenIddict.Validation.AspNetCore was challenged.
2021-09-03 18:11:18.467 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 400 175 application/json;charset=UTF-8 397109.1724ms
2021-09-03 18:20:24.096 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 18:20:24.097 +02:00 [INF] CORS policy execution successful.
2021-09-03 18:20:24.098 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 2.4402ms
2021-09-03 18:20:24.105 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 18:20:24.105 +02:00 [INF] CORS policy execution successful.
2021-09-03 18:20:24.107 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-03 18:20:28.449 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-03 18:20:28.452 +02:00 [INF] The response was successfully returned as a JSON document: {
  "error": "server_error",
  "error_description": "This resource server is currently unavailable.",
  "error_uri": "https://documentation.openiddict.com/errors/ID2092"
}.
2021-09-03 18:20:28.452 +02:00 [INF] AuthenticationScheme: OpenIddict.Validation.AspNetCore was challenged.
2021-09-03 18:20:28.452 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 400 175 application/json;charset=UTF-8 4347.1068ms
2021-09-03 18:20:52.295 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-03 18:20:52.453 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-03 18:20:52.453 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-03 18:20:52.453 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-03 18:20:52.453 +02:00 [INF] Hosting environment: Development
2021-09-03 18:20:52.453 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-03 18:20:54.525 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 18:20:54.539 +02:00 [INF] CORS policy execution successful.
2021-09-03 18:20:54.542 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 18.0305ms
2021-09-03 18:20:54.544 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 18:20:54.554 +02:00 [INF] CORS policy execution successful.
2021-09-03 18:20:54.805 +02:00 [INF] Successfully validated the token.
2021-09-03 18:20:54.809 +02:00 [INF] Authorization was successful.
2021-09-03 18:20:54.810 +02:00 [INF] Executing endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 18:20:54.820 +02:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[ExampleApi.WeatherForecast] Get() on controller ExampleApi.Controllers.WeatherForecastController (ExampleApi).
2021-09-03 18:20:54.824 +02:00 [INF] Executing ObjectResult, writing value of type 'ExampleApi.WeatherForecast[]'.
2021-09-03 18:20:54.844 +02:00 [INF] Executed action ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi) in 21.3034ms
2021-09-03 18:20:54.845 +02:00 [INF] Executed endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-03 18:20:54.846 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 200 - application/json;+charset=utf-8 302.3913ms
2021-09-03 18:47:07.797 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-03 18:47:07.951 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-03 18:47:07.951 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-03 18:47:07.951 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-03 18:47:07.951 +02:00 [INF] Hosting environment: Development
2021-09-03 18:47:07.951 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-03 18:47:17.734 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 18:47:17.755 +02:00 [INF] CORS policy execution successful.
2021-09-03 18:47:17.759 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 26.0689ms
2021-09-03 18:47:17.762 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 18:47:17.776 +02:00 [INF] CORS policy execution successful.
2021-09-03 18:47:18.135 +02:00 [INF] Successfully validated the token.
2021-09-03 18:47:18.178 +02:00 [INF] Start processing HTTP request GET "https://localhost:5001/.well-known/openid-configuration"
2021-09-03 18:47:18.186 +02:00 [INF] Sending HTTP request GET "https://localhost:5001/.well-known/openid-configuration"
2021-09-03 18:47:18.196 +02:00 [INF] Received HTTP response headers after 7.7009ms - 200
2021-09-03 18:47:18.199 +02:00 [INF] End processing HTTP request after 23.9426ms - 200
2021-09-03 18:47:18.222 +02:00 [INF] Start processing HTTP request GET "https://localhost:5001/.well-known/jwks"
2021-09-03 18:47:18.222 +02:00 [INF] Sending HTTP request GET "https://localhost:5001/.well-known/jwks"
2021-09-03 18:47:18.224 +02:00 [INF] Received HTTP response headers after 1.4223ms - 200
2021-09-03 18:47:18.224 +02:00 [INF] End processing HTTP request after 2.0427ms - 200
2021-09-03 18:47:18.236 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-03 18:47:32.556 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-03 18:47:32.570 +02:00 [INF] The response was successfully returned as a JSON document: {
  "error": "server_error",
  "error_description": "This resource server is currently unavailable.",
  "error_uri": "https://documentation.openiddict.com/errors/ID2092"
}.
2021-09-03 18:47:32.572 +02:00 [INF] AuthenticationScheme: OpenIddict.Validation.AspNetCore was challenged.
2021-09-03 18:47:32.574 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 400 175 application/json;charset=UTF-8 14812.0365ms
2021-09-03 18:47:53.510 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-03 18:47:53.664 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-03 18:47:53.664 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-03 18:47:53.664 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-03 18:47:53.664 +02:00 [INF] Hosting environment: Development
2021-09-03 18:47:53.664 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-03 18:47:56.942 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 18:47:56.956 +02:00 [INF] CORS policy execution successful.
2021-09-03 18:47:56.959 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 18.4359ms
2021-09-03 18:47:56.961 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 18:47:56.970 +02:00 [INF] CORS policy execution successful.
2021-09-03 18:47:57.030 +02:00 [INF] Start processing HTTP request GET "https://localhost:5001/.well-known/openid-configuration"
2021-09-03 18:47:57.038 +02:00 [INF] Sending HTTP request GET "https://localhost:5001/.well-known/openid-configuration"
2021-09-03 18:47:57.089 +02:00 [INF] Received HTTP response headers after 48.9377ms - 200
2021-09-03 18:47:57.092 +02:00 [INF] End processing HTTP request after 64.8213ms - 200
2021-09-03 18:47:57.111 +02:00 [INF] Start processing HTTP request GET "https://localhost:5001/.well-known/jwks"
2021-09-03 18:47:57.111 +02:00 [INF] Sending HTTP request GET "https://localhost:5001/.well-known/jwks"
2021-09-03 18:47:57.112 +02:00 [INF] Received HTTP response headers after 1.595ms - 200
2021-09-03 18:47:57.113 +02:00 [INF] End processing HTTP request after 1.9968ms - 200
2021-09-03 18:47:57.129 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-03 18:47:57.131 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-03 18:47:57.134 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-03 18:47:57.148 +02:00 [INF] The response was successfully returned as a JSON document: {
  "error": "server_error",
  "error_description": "This resource server is currently unavailable.",
  "error_uri": "https://documentation.openiddict.com/errors/ID2092"
}.
2021-09-03 18:47:57.149 +02:00 [INF] AuthenticationScheme: OpenIddict.Validation.AspNetCore was challenged.
2021-09-03 18:47:57.151 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 400 175 application/json;charset=UTF-8 189.2856ms
2021-09-03 18:48:10.608 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-03 18:48:10.609 +02:00 [INF] CORS policy execution successful.
2021-09-03 18:48:10.610 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 1.9771ms
2021-09-03 18:48:10.613 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-03 18:48:10.613 +02:00 [INF] CORS policy execution successful.
2021-09-03 18:48:10.614 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-03 18:48:10.614 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-03 18:52:15.937 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-03 18:52:15.937 +02:00 [INF] The response was successfully returned as a JSON document: {
  "error": "server_error",
  "error_description": "This resource server is currently unavailable.",
  "error_uri": "https://documentation.openiddict.com/errors/ID2092"
}.
2021-09-03 18:52:15.938 +02:00 [INF] AuthenticationScheme: OpenIddict.Validation.AspNetCore was challenged.
2021-09-03 18:52:15.938 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 400 175 application/json;charset=UTF-8 245324.7531ms
2021-09-03 18:52:19.637 +02:00 [INF] Application is shutting down...
2021-09-04 09:21:54.698 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-04 09:21:54.888 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-04 09:21:54.889 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-04 09:21:54.889 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-04 09:21:54.889 +02:00 [INF] Hosting environment: Development
2021-09-04 09:21:54.889 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-04 09:24:35.502 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-04 09:24:35.518 +02:00 [INF] CORS policy execution successful.
2021-09-04 09:24:35.521 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 19.7382ms
2021-09-04 09:24:35.523 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-04 09:24:35.532 +02:00 [INF] CORS policy execution successful.
2021-09-04 09:24:35.655 +02:00 [INF] Start processing HTTP request GET "https://localhost:5001/.well-known/openid-configuration"
2021-09-04 09:24:35.663 +02:00 [INF] Sending HTTP request GET "https://localhost:5001/.well-known/openid-configuration"
2021-09-04 09:24:35.715 +02:00 [INF] Received HTTP response headers after 50.1655ms - 200
2021-09-04 09:24:35.717 +02:00 [INF] End processing HTTP request after 64.8733ms - 200
2021-09-04 09:24:35.736 +02:00 [INF] Start processing HTTP request GET "https://localhost:5001/.well-known/jwks"
2021-09-04 09:24:35.736 +02:00 [INF] Sending HTTP request GET "https://localhost:5001/.well-known/jwks"
2021-09-04 09:24:35.738 +02:00 [INF] Received HTTP response headers after 2.7277ms - 200
2021-09-04 09:24:35.739 +02:00 [INF] End processing HTTP request after 3.154ms - 200
2021-09-04 09:24:35.756 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-04 09:24:35.758 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-04 09:24:35.760 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-04 09:24:35.773 +02:00 [INF] The response was successfully returned as a JSON document: {
  "error": "server_error",
  "error_description": "This resource server is currently unavailable.",
  "error_uri": "https://documentation.openiddict.com/errors/ID2092"
}.
2021-09-04 09:24:35.774 +02:00 [INF] AuthenticationScheme: OpenIddict.Validation.AspNetCore was challenged.
2021-09-04 09:24:35.776 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 400 175 application/json;charset=UTF-8 253.3630ms
2021-09-04 09:25:36.891 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-04 09:25:36.895 +02:00 [INF] CORS policy execution successful.
2021-09-04 09:25:36.896 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 4.9944ms
2021-09-04 09:25:36.902 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-04 09:25:36.902 +02:00 [INF] CORS policy execution successful.
2021-09-04 09:25:36.903 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-04 09:25:36.903 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-04 09:27:30.680 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-04 09:27:30.687 +02:00 [INF] The response was successfully returned as a JSON document: {
  "error": "server_error",
  "error_description": "This resource server is currently unavailable.",
  "error_uri": "https://documentation.openiddict.com/errors/ID2092"
}.
2021-09-04 09:27:30.692 +02:00 [INF] AuthenticationScheme: OpenIddict.Validation.AspNetCore was challenged.
2021-09-04 09:27:30.695 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 400 175 application/json;charset=UTF-8 113790.1998ms
2021-09-04 10:50:38.792 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-04 10:50:38.952 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-04 10:50:38.952 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-04 10:50:38.952 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-04 10:50:38.952 +02:00 [INF] Hosting environment: Development
2021-09-04 10:50:38.952 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-04 10:53:54.255 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-04 10:53:54.277 +02:00 [INF] CORS policy execution successful.
2021-09-04 10:53:54.288 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 27.7179ms
2021-09-04 10:53:54.289 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-04 10:53:54.304 +02:00 [INF] CORS policy execution successful.
2021-09-04 10:53:54.423 +02:00 [INF] Start processing HTTP request GET "https://localhost:5001/.well-known/openid-configuration"
2021-09-04 10:53:54.432 +02:00 [INF] Sending HTTP request GET "https://localhost:5001/.well-known/openid-configuration"
2021-09-04 10:53:54.494 +02:00 [INF] Received HTTP response headers after 60.9329ms - 200
2021-09-04 10:53:54.497 +02:00 [INF] End processing HTTP request after 76.7415ms - 200
2021-09-04 10:53:54.523 +02:00 [INF] Start processing HTTP request GET "https://localhost:5001/.well-known/jwks"
2021-09-04 10:53:54.523 +02:00 [INF] Sending HTTP request GET "https://localhost:5001/.well-known/jwks"
2021-09-04 10:53:54.527 +02:00 [INF] Received HTTP response headers after 3.9791ms - 200
2021-09-04 10:53:54.527 +02:00 [INF] End processing HTTP request after 4.5482ms - 200
2021-09-04 10:53:54.551 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-04 10:53:54.553 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-04 10:54:36.300 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-04 10:54:36.314 +02:00 [INF] The response was successfully returned as a JSON document: {
  "error": "server_error",
  "error_description": "This resource server is currently unavailable.",
  "error_uri": "https://documentation.openiddict.com/errors/ID2092"
}.
2021-09-04 10:54:36.315 +02:00 [INF] AuthenticationScheme: OpenIddict.Validation.AspNetCore was challenged.
2021-09-04 10:54:36.317 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 400 175 application/json;charset=UTF-8 42027.9124ms
2021-09-04 11:04:20.478 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-04 11:04:20.479 +02:00 [INF] CORS policy execution successful.
2021-09-04 11:04:20.479 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 2.2562ms
2021-09-04 11:04:20.486 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-04 11:04:20.486 +02:00 [INF] CORS policy execution successful.
2021-09-04 11:04:20.487 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-04 11:04:20.487 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-04 11:04:25.683 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-04 11:04:25.687 +02:00 [INF] The response was successfully returned as a JSON document: {
  "error": "server_error",
  "error_description": "This resource server is currently unavailable.",
  "error_uri": "https://documentation.openiddict.com/errors/ID2092"
}.
2021-09-04 11:04:25.689 +02:00 [INF] AuthenticationScheme: OpenIddict.Validation.AspNetCore was challenged.
2021-09-04 11:04:25.689 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 400 175 application/json;charset=UTF-8 5202.9137ms
2021-09-04 11:05:29.998 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-04 11:05:29.999 +02:00 [INF] CORS policy execution successful.
2021-09-04 11:05:30.000 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 1.7675ms
2021-09-04 11:05:30.002 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-04 11:05:30.002 +02:00 [INF] CORS policy execution successful.
2021-09-04 11:05:30.004 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-04 11:05:30.004 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-04 11:06:44.175 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-04 11:06:44.175 +02:00 [INF] The response was successfully returned as a JSON document: {
  "error": "server_error",
  "error_description": "This resource server is currently unavailable.",
  "error_uri": "https://documentation.openiddict.com/errors/ID2092"
}.
2021-09-04 11:06:44.175 +02:00 [INF] AuthenticationScheme: OpenIddict.Validation.AspNetCore was challenged.
2021-09-04 11:06:44.176 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 400 175 application/json;charset=UTF-8 74173.9301ms
2021-09-04 11:07:35.915 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-04 11:07:35.916 +02:00 [INF] CORS policy execution successful.
2021-09-04 11:07:35.916 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 2.1723ms
2021-09-04 11:07:35.921 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-04 11:07:35.922 +02:00 [INF] CORS policy execution successful.
2021-09-04 11:07:35.922 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-04 11:07:35.922 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-04 11:08:23.632 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-04 11:08:23.632 +02:00 [INF] The response was successfully returned as a JSON document: {
  "error": "server_error",
  "error_description": "This resource server is currently unavailable.",
  "error_uri": "https://documentation.openiddict.com/errors/ID2092"
}.
2021-09-04 11:08:23.633 +02:00 [INF] AuthenticationScheme: OpenIddict.Validation.AspNetCore was challenged.
2021-09-04 11:08:23.633 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 400 175 application/json;charset=UTF-8 47711.3019ms
2021-09-04 11:16:11.176 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-04 11:16:11.177 +02:00 [INF] CORS policy execution successful.
2021-09-04 11:16:11.177 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 0.6480ms
2021-09-04 11:16:11.179 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-04 11:16:11.181 +02:00 [INF] CORS policy execution successful.
2021-09-04 11:16:11.182 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-04 11:16:11.182 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-04 11:16:33.318 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-04 11:16:33.320 +02:00 [INF] The response was successfully returned as a JSON document: {
  "error": "server_error",
  "error_description": "This resource server is currently unavailable.",
  "error_uri": "https://documentation.openiddict.com/errors/ID2092"
}.
2021-09-04 11:16:33.320 +02:00 [INF] AuthenticationScheme: OpenIddict.Validation.AspNetCore was challenged.
2021-09-04 11:16:33.321 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 400 175 application/json;charset=UTF-8 22142.6181ms
2021-09-04 11:19:33.890 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-04 11:19:33.891 +02:00 [INF] CORS policy execution successful.
2021-09-04 11:19:33.891 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 0.5706ms
2021-09-04 11:19:33.892 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-04 11:19:33.892 +02:00 [INF] CORS policy execution successful.
2021-09-04 11:19:33.892 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-04 11:19:33.892 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-04 11:20:13.246 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-04 11:20:13.247 +02:00 [INF] The response was successfully returned as a JSON document: {
  "error": "server_error",
  "error_description": "This resource server is currently unavailable.",
  "error_uri": "https://documentation.openiddict.com/errors/ID2092"
}.
2021-09-04 11:20:13.247 +02:00 [INF] AuthenticationScheme: OpenIddict.Validation.AspNetCore was challenged.
2021-09-04 11:20:13.248 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 400 175 application/json;charset=UTF-8 39356.3966ms
2021-09-04 11:22:12.259 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-04 11:22:12.259 +02:00 [INF] CORS policy execution successful.
2021-09-04 11:22:12.260 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 0.8763ms
2021-09-04 11:22:12.267 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-04 11:22:12.267 +02:00 [INF] CORS policy execution successful.
2021-09-04 11:22:12.268 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-04 11:22:12.268 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-04 11:22:47.169 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-04 11:22:47.170 +02:00 [INF] The response was successfully returned as a JSON document: {
  "error": "server_error",
  "error_description": "This resource server is currently unavailable.",
  "error_uri": "https://documentation.openiddict.com/errors/ID2092"
}.
2021-09-04 11:22:47.170 +02:00 [INF] AuthenticationScheme: OpenIddict.Validation.AspNetCore was challenged.
2021-09-04 11:22:47.170 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 400 175 application/json;charset=UTF-8 34902.7997ms
2021-09-04 11:25:32.629 +02:00 [INF] Application is shutting down...
2021-09-04 11:54:42.058 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-04 11:54:42.215 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-04 11:54:42.215 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-04 11:54:42.215 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-04 11:54:42.215 +02:00 [INF] Hosting environment: Development
2021-09-04 11:54:42.216 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-04 11:57:05.791 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-04 11:57:05.812 +02:00 [INF] CORS policy execution successful.
2021-09-04 11:57:05.816 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 25.7458ms
2021-09-04 11:57:05.828 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-04 11:57:05.843 +02:00 [INF] CORS policy execution successful.
2021-09-04 11:57:05.950 +02:00 [INF] Start processing HTTP request GET "https://localhost:5001/.well-known/openid-configuration"
2021-09-04 11:57:05.958 +02:00 [INF] Sending HTTP request GET "https://localhost:5001/.well-known/openid-configuration"
2021-09-04 11:57:06.023 +02:00 [INF] Received HTTP response headers after 62.7898ms - 200
2021-09-04 11:57:06.025 +02:00 [INF] End processing HTTP request after 78.8408ms - 200
2021-09-04 11:57:06.054 +02:00 [INF] Start processing HTTP request GET "https://localhost:5001/.well-known/jwks"
2021-09-04 11:57:06.054 +02:00 [INF] Sending HTTP request GET "https://localhost:5001/.well-known/jwks"
2021-09-04 11:57:06.057 +02:00 [INF] Received HTTP response headers after 2.6118ms - 200
2021-09-04 11:57:06.057 +02:00 [INF] End processing HTTP request after 3.1206ms - 200
2021-09-04 11:57:06.088 +02:00 [INF] Start processing HTTP request POST "https://localhost:5001/connect/introspect"
2021-09-04 11:57:06.088 +02:00 [INF] Sending HTTP request POST "https://localhost:5001/connect/introspect"
2021-09-04 11:57:06.109 +02:00 [INF] Received HTTP response headers after 20.8058ms - 400
2021-09-04 11:57:06.109 +02:00 [INF] End processing HTTP request after 21.1539ms - 400
2021-09-04 11:57:06.119 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-04 11:57:06.121 +02:00 [INF] OpenIddict.Validation.AspNetCore was not authenticated. Failure message: An error occurred while authenticating the current request.
2021-09-04 11:57:31.556 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-04 11:57:31.569 +02:00 [INF] The response was successfully returned as a challenge response: {
  "error": "invalid_token",
  "error_description": "The specified token is invalid.",
  "error_uri": "https://documentation.openiddict.com/errors/ID2004"
}.
2021-09-04 11:57:31.569 +02:00 [INF] AuthenticationScheme: OpenIddict.Validation.AspNetCore was challenged.
2021-09-04 11:57:31.572 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 401 0 - 25743.4796ms
2021-09-04 12:11:48.202 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-04 12:11:48.355 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-04 12:11:48.355 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-04 12:11:48.356 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-04 12:11:48.356 +02:00 [INF] Hosting environment: Development
2021-09-04 12:11:48.356 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-04 12:12:06.477 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-04 12:12:06.491 +02:00 [INF] CORS policy execution successful.
2021-09-04 12:12:06.494 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 18.6336ms
2021-09-04 12:12:06.495 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-04 12:12:06.504 +02:00 [INF] CORS policy execution successful.
2021-09-04 12:12:06.721 +02:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenDecryptionFailedException: IDX10609: Decryption failed. No Keys tried: token: 'System.String'.
   at Microsoft.IdentityModel.JsonWebTokens.JwtTokenUtilities.ValidateDecryption(JwtTokenDecryptionParameters decryptionParameters, Boolean decryptionSucceeded, Boolean algorithmNotSupportedByCryptoProvider, StringBuilder exceptionStrings, StringBuilder keysAttempted)
   at Microsoft.IdentityModel.JsonWebTokens.JwtTokenUtilities.DecryptJwtToken(SecurityToken jwtToken, TokenValidationParameters validationParameters, JwtTokenDecryptionParameters decryptionParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.DecryptToken(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2021-09-04 12:12:06.733 +02:00 [INF] Bearer was not authenticated. Failure message: IDX10609: Decryption failed. No Keys tried: token: 'System.String'.
2021-09-04 12:12:06.737 +02:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: No authentication handler is registered for the scheme 'OpenIddict.Validation.AspNetCore'. The registered schemes are: Bearer. Did you forget to call AddAuthentication().Add[SomeAuthHandler]("OpenIddict.Validation.AspNetCore",...)?
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authorization.Policy.PolicyEvaluator.AuthenticateAsync(AuthorizationPolicy policy, HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2021-09-04 12:12:06.745 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 500 - text/plain 249.8242ms
2021-09-04 12:12:57.041 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-04 12:12:57.042 +02:00 [INF] CORS policy execution successful.
2021-09-04 12:12:57.042 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 0.9321ms
2021-09-04 12:12:57.046 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-04 12:12:57.046 +02:00 [INF] CORS policy execution successful.
2021-09-04 12:12:57.047 +02:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenDecryptionFailedException: IDX10609: Decryption failed. No Keys tried: token: 'System.String'.
   at Microsoft.IdentityModel.JsonWebTokens.JwtTokenUtilities.ValidateDecryption(JwtTokenDecryptionParameters decryptionParameters, Boolean decryptionSucceeded, Boolean algorithmNotSupportedByCryptoProvider, StringBuilder exceptionStrings, StringBuilder keysAttempted)
   at Microsoft.IdentityModel.JsonWebTokens.JwtTokenUtilities.DecryptJwtToken(SecurityToken jwtToken, TokenValidationParameters validationParameters, JwtTokenDecryptionParameters decryptionParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.DecryptToken(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2021-09-04 12:12:57.048 +02:00 [INF] Bearer was not authenticated. Failure message: IDX10609: Decryption failed. No Keys tried: token: 'System.String'.
2021-09-04 12:12:57.048 +02:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: No authentication handler is registered for the scheme 'OpenIddict.Validation.AspNetCore'. The registered schemes are: Bearer. Did you forget to call AddAuthentication().Add[SomeAuthHandler]("OpenIddict.Validation.AspNetCore",...)?
   at Microsoft.AspNetCore.Authentication.AuthenticationService.AuthenticateAsync(HttpContext context, String scheme)
   at Microsoft.AspNetCore.Authorization.Policy.PolicyEvaluator.AuthenticateAsync(AuthorizationPolicy policy, HttpContext context)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2021-09-04 12:12:57.049 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 500 - text/plain 3.4883ms
2021-09-04 12:13:34.270 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-04 12:13:34.422 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-04 12:13:34.422 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-04 12:13:34.422 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-04 12:13:34.422 +02:00 [INF] Hosting environment: Development
2021-09-04 12:13:34.422 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-04 12:13:40.477 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-04 12:13:40.491 +02:00 [INF] CORS policy execution successful.
2021-09-04 12:13:40.494 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 18.6768ms
2021-09-04 12:13:40.496 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-04 12:13:40.507 +02:00 [INF] CORS policy execution successful.
2021-09-04 12:13:40.722 +02:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenDecryptionFailedException: IDX10609: Decryption failed. No Keys tried: token: 'System.String'.
   at Microsoft.IdentityModel.JsonWebTokens.JwtTokenUtilities.ValidateDecryption(JwtTokenDecryptionParameters decryptionParameters, Boolean decryptionSucceeded, Boolean algorithmNotSupportedByCryptoProvider, StringBuilder exceptionStrings, StringBuilder keysAttempted)
   at Microsoft.IdentityModel.JsonWebTokens.JwtTokenUtilities.DecryptJwtToken(SecurityToken jwtToken, TokenValidationParameters validationParameters, JwtTokenDecryptionParameters decryptionParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.DecryptToken(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2021-09-04 12:13:40.733 +02:00 [INF] Bearer was not authenticated. Failure message: IDX10609: Decryption failed. No Keys tried: token: 'System.String'.
2021-09-04 12:13:40.737 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-04 12:13:40.741 +02:00 [INF] AuthenticationScheme: Bearer was challenged.
2021-09-04 12:13:40.743 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 401 0 - 246.4775ms
2021-09-04 12:13:49.006 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-04 12:13:49.007 +02:00 [INF] CORS policy execution successful.
2021-09-04 12:13:49.007 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 1.2126ms
2021-09-04 12:13:49.011 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-04 12:13:49.011 +02:00 [INF] CORS policy execution successful.
2021-09-04 12:13:49.012 +02:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenDecryptionFailedException: IDX10609: Decryption failed. No Keys tried: token: 'System.String'.
   at Microsoft.IdentityModel.JsonWebTokens.JwtTokenUtilities.ValidateDecryption(JwtTokenDecryptionParameters decryptionParameters, Boolean decryptionSucceeded, Boolean algorithmNotSupportedByCryptoProvider, StringBuilder exceptionStrings, StringBuilder keysAttempted)
   at Microsoft.IdentityModel.JsonWebTokens.JwtTokenUtilities.DecryptJwtToken(SecurityToken jwtToken, TokenValidationParameters validationParameters, JwtTokenDecryptionParameters decryptionParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.DecryptToken(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2021-09-04 12:13:49.012 +02:00 [INF] Bearer was not authenticated. Failure message: IDX10609: Decryption failed. No Keys tried: token: 'System.String'.
2021-09-04 12:13:49.013 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-04 12:13:49.013 +02:00 [INF] AuthenticationScheme: Bearer was challenged.
2021-09-04 12:13:49.013 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 401 0 - 2.4902ms
2021-09-04 12:14:02.772 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-04 12:14:02.772 +02:00 [INF] CORS policy execution successful.
2021-09-04 12:14:02.773 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 0.7373ms
2021-09-04 12:14:02.774 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-04 12:14:02.774 +02:00 [INF] CORS policy execution successful.
2021-09-04 12:14:02.775 +02:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenDecryptionFailedException: IDX10609: Decryption failed. No Keys tried: token: 'System.String'.
   at Microsoft.IdentityModel.JsonWebTokens.JwtTokenUtilities.ValidateDecryption(JwtTokenDecryptionParameters decryptionParameters, Boolean decryptionSucceeded, Boolean algorithmNotSupportedByCryptoProvider, StringBuilder exceptionStrings, StringBuilder keysAttempted)
   at Microsoft.IdentityModel.JsonWebTokens.JwtTokenUtilities.DecryptJwtToken(SecurityToken jwtToken, TokenValidationParameters validationParameters, JwtTokenDecryptionParameters decryptionParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.DecryptToken(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2021-09-04 12:14:02.776 +02:00 [INF] Bearer was not authenticated. Failure message: IDX10609: Decryption failed. No Keys tried: token: 'System.String'.
2021-09-04 12:14:51.603 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-04 12:14:51.608 +02:00 [INF] AuthenticationScheme: Bearer was challenged.
2021-09-04 12:14:51.611 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 0 - - 48834.2373ms
2021-09-04 12:14:51.613 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-04 12:14:51.614 +02:00 [INF] CORS policy execution successful.
2021-09-04 12:14:51.614 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 2.3159ms
2021-09-04 12:14:51.628 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-04 12:14:51.628 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-04 12:14:51.628 +02:00 [INF] CORS policy execution successful.
2021-09-04 12:14:51.628 +02:00 [INF] CORS policy execution successful.
2021-09-04 12:14:51.628 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 0.8312ms
2021-09-04 12:14:51.628 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 0.6758ms
2021-09-04 12:14:51.630 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-04 12:14:51.630 +02:00 [INF] CORS policy execution successful.
2021-09-04 12:14:51.630 +02:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenDecryptionFailedException: IDX10609: Decryption failed. No Keys tried: token: 'System.String'.
   at Microsoft.IdentityModel.JsonWebTokens.JwtTokenUtilities.ValidateDecryption(JwtTokenDecryptionParameters decryptionParameters, Boolean decryptionSucceeded, Boolean algorithmNotSupportedByCryptoProvider, StringBuilder exceptionStrings, StringBuilder keysAttempted)
   at Microsoft.IdentityModel.JsonWebTokens.JwtTokenUtilities.DecryptJwtToken(SecurityToken jwtToken, TokenValidationParameters validationParameters, JwtTokenDecryptionParameters decryptionParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.DecryptToken(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2021-09-04 12:14:51.631 +02:00 [INF] Bearer was not authenticated. Failure message: IDX10609: Decryption failed. No Keys tried: token: 'System.String'.
2021-09-04 12:14:55.926 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-04 12:14:55.926 +02:00 [INF] AuthenticationScheme: Bearer was challenged.
2021-09-04 12:14:55.927 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 401 0 - 4297.1204ms
2021-09-04 12:15:18.984 +02:00 [INF] Application is shutting down...
2021-09-04 12:15:35.803 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-04 12:15:35.970 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-04 12:15:35.970 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-04 12:15:35.970 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-04 12:15:35.970 +02:00 [INF] Hosting environment: Development
2021-09-04 12:15:35.970 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-04 12:15:50.889 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-04 12:15:50.903 +02:00 [INF] CORS policy execution successful.
2021-09-04 12:15:50.907 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 18.8939ms
2021-09-04 12:15:50.912 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-04 12:15:50.922 +02:00 [INF] CORS policy execution successful.
2021-09-04 12:15:51.133 +02:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenDecryptionFailedException: IDX10609: Decryption failed. No Keys tried: token: 'System.String'.
   at Microsoft.IdentityModel.JsonWebTokens.JwtTokenUtilities.ValidateDecryption(JwtTokenDecryptionParameters decryptionParameters, Boolean decryptionSucceeded, Boolean algorithmNotSupportedByCryptoProvider, StringBuilder exceptionStrings, StringBuilder keysAttempted)
   at Microsoft.IdentityModel.JsonWebTokens.JwtTokenUtilities.DecryptJwtToken(SecurityToken jwtToken, TokenValidationParameters validationParameters, JwtTokenDecryptionParameters decryptionParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.DecryptToken(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2021-09-04 12:15:51.144 +02:00 [INF] Bearer was not authenticated. Failure message: IDX10609: Decryption failed. No Keys tried: token: 'System.String'.
2021-09-04 12:15:51.148 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-04 12:15:51.152 +02:00 [INF] AuthenticationScheme: Bearer was challenged.
2021-09-04 12:15:51.154 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 401 0 - 241.3809ms
2021-09-04 12:16:54.046 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-04 12:16:54.203 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-04 12:16:54.203 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-04 12:16:54.203 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-04 12:16:54.203 +02:00 [INF] Hosting environment: Development
2021-09-04 12:16:54.203 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-04 12:17:00.369 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-04 12:17:00.383 +02:00 [INF] CORS policy execution successful.
2021-09-04 12:17:00.386 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 18.3678ms
2021-09-04 12:17:00.388 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-04 12:17:00.397 +02:00 [INF] CORS policy execution successful.
2021-09-04 12:17:00.622 +02:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenDecryptionFailedException: IDX10609: Decryption failed. No Keys tried: token: 'System.String'.
   at Microsoft.IdentityModel.JsonWebTokens.JwtTokenUtilities.ValidateDecryption(JwtTokenDecryptionParameters decryptionParameters, Boolean decryptionSucceeded, Boolean algorithmNotSupportedByCryptoProvider, StringBuilder exceptionStrings, StringBuilder keysAttempted)
   at Microsoft.IdentityModel.JsonWebTokens.JwtTokenUtilities.DecryptJwtToken(SecurityToken jwtToken, TokenValidationParameters validationParameters, JwtTokenDecryptionParameters decryptionParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.DecryptToken(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2021-09-04 12:17:00.633 +02:00 [INF] Bearer was not authenticated. Failure message: IDX10609: Decryption failed. No Keys tried: token: 'System.String'.
2021-09-04 12:17:00.637 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-04 12:17:00.641 +02:00 [INF] AuthenticationScheme: Bearer was challenged.
2021-09-04 12:17:00.643 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 401 0 - 254.3072ms
2021-09-04 12:17:25.358 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-04 12:17:25.360 +02:00 [INF] CORS policy execution successful.
2021-09-04 12:17:25.360 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 2.1948ms
2021-09-04 12:17:25.363 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-04 12:17:25.364 +02:00 [INF] CORS policy execution successful.
2021-09-04 12:17:25.365 +02:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenDecryptionFailedException: IDX10609: Decryption failed. No Keys tried: token: 'System.String'.
   at Microsoft.IdentityModel.JsonWebTokens.JwtTokenUtilities.ValidateDecryption(JwtTokenDecryptionParameters decryptionParameters, Boolean decryptionSucceeded, Boolean algorithmNotSupportedByCryptoProvider, StringBuilder exceptionStrings, StringBuilder keysAttempted)
   at Microsoft.IdentityModel.JsonWebTokens.JwtTokenUtilities.DecryptJwtToken(SecurityToken jwtToken, TokenValidationParameters validationParameters, JwtTokenDecryptionParameters decryptionParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.DecryptToken(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2021-09-04 12:17:25.365 +02:00 [INF] Bearer was not authenticated. Failure message: IDX10609: Decryption failed. No Keys tried: token: 'System.String'.
2021-09-04 12:17:25.366 +02:00 [INF] Authorization failed. These requirements were not met:
ExampleApi.Authorization.RequireScope
2021-09-04 12:17:25.366 +02:00 [INF] AuthenticationScheme: Bearer was challenged.
2021-09-04 12:17:25.366 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 401 0 - 2.7789ms
2021-09-04 12:17:37.102 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-04 12:17:37.102 +02:00 [INF] CORS policy execution successful.
2021-09-04 12:17:37.102 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 0.6409ms
2021-09-04 12:17:37.104 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-04 12:17:37.104 +02:00 [INF] CORS policy execution successful.
2021-09-04 12:17:37.141 +02:00 [INF] Successfully validated the token.
2021-09-04 12:17:37.142 +02:00 [INF] Authorization was successful.
2021-09-04 12:17:37.142 +02:00 [INF] Executing endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-04 12:17:37.151 +02:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[ExampleApi.WeatherForecast] Get() on controller ExampleApi.Controllers.WeatherForecastController (ExampleApi).
2021-09-04 12:17:37.154 +02:00 [INF] Executing ObjectResult, writing value of type 'ExampleApi.WeatherForecast[]'.
2021-09-04 12:17:37.174 +02:00 [INF] Executed action ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi) in 19.5594ms
2021-09-04 12:17:37.175 +02:00 [INF] Executed endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-04 12:17:37.175 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 200 - application/json;+charset=utf-8 71.3269ms
2021-09-04 12:17:47.608 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-04 12:17:47.765 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-04 12:17:47.765 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-04 12:17:47.765 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-04 12:17:47.765 +02:00 [INF] Hosting environment: Development
2021-09-04 12:17:47.765 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-04 12:17:49.608 +02:00 [INF] Request starting HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - -
2021-09-04 12:17:49.622 +02:00 [INF] CORS policy execution successful.
2021-09-04 12:17:49.626 +02:00 [INF] Request finished HTTP/2 OPTIONS https://localhost:5003/WeatherForecast - - - 204 - - 18.8765ms
2021-09-04 12:17:49.628 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/WeatherForecast - -
2021-09-04 12:17:49.638 +02:00 [INF] CORS policy execution successful.
2021-09-04 12:17:49.869 +02:00 [INF] Successfully validated the token.
2021-09-04 12:17:49.873 +02:00 [INF] Authorization was successful.
2021-09-04 12:17:49.873 +02:00 [INF] Executing endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-04 12:17:49.883 +02:00 [INF] Route matched with {action = "Get", controller = "WeatherForecast"}. Executing controller action with signature System.Collections.Generic.IEnumerable`1[ExampleApi.WeatherForecast] Get() on controller ExampleApi.Controllers.WeatherForecastController (ExampleApi).
2021-09-04 12:17:49.888 +02:00 [INF] Executing ObjectResult, writing value of type 'ExampleApi.WeatherForecast[]'.
2021-09-04 12:17:49.908 +02:00 [INF] Executed action ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi) in 21.5398ms
2021-09-04 12:17:49.909 +02:00 [INF] Executed endpoint 'ExampleApi.Controllers.WeatherForecastController.Get (ExampleApi)'
2021-09-04 12:17:49.910 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/WeatherForecast - - - 200 - application/json;+charset=utf-8 282.7837ms
2021-09-04 12:18:54.257 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-04 12:18:54.493 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-04 12:18:54.493 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-04 12:18:54.493 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-04 12:18:54.493 +02:00 [INF] Hosting environment: Development
2021-09-04 12:18:54.493 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-04 12:18:56.857 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-04 12:18:57.006 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-04 12:18:57.007 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-04 12:18:57.007 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-04 12:18:57.007 +02:00 [INF] Hosting environment: Development
2021-09-04 12:18:57.007 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-04 12:19:07.107 +02:00 [INF] Application is shutting down...
2021-09-06 13:25:32.832 +02:00 [INF] User profile is available. Using 'C:\Users\Pedro\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2021-09-06 13:25:33.225 +02:00 [INF] Now listening on: https://localhost:5003
2021-09-06 13:25:33.226 +02:00 [INF] Now listening on: http://localhost:5002
2021-09-06 13:25:33.226 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2021-09-06 13:25:33.226 +02:00 [INF] Hosting environment: Development
2021-09-06 13:25:33.227 +02:00 [INF] Content root path: C:\Users\Pedro\source\repos\openiddict-with-angular\ExampleApi
2021-09-06 13:25:35.100 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/swagger - -
2021-09-06 13:25:35.132 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/swagger - - - 301 0 - 32.8420ms
2021-09-06 13:25:35.140 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/swagger/index.html - -
2021-09-06 13:25:35.182 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/swagger/index.html - - - 200 - text/html;charset=utf-8 41.9682ms
2021-09-06 13:25:35.215 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/swagger/swagger-ui-bundle.js - -
2021-09-06 13:25:35.215 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/swagger/swagger-ui-standalone-preset.js - -
2021-09-06 13:25:35.215 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/swagger/swagger-ui.css - -
2021-09-06 13:25:35.247 +02:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2021-09-06 13:25:35.247 +02:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2021-09-06 13:25:35.250 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/swagger/swagger-ui-standalone-preset.js - - - 200 311804 application/javascript 34.7430ms
2021-09-06 13:25:35.250 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/swagger/swagger-ui.css - - - 200 142933 text/css 34.7571ms
2021-09-06 13:25:35.251 +02:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2021-09-06 13:25:35.251 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/swagger/swagger-ui-bundle.js - - - 200 986342 application/javascript 35.9620ms
2021-09-06 13:25:35.392 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:5003/swagger/swagger-ui-bundle.js.map - -
2021-09-06 13:25:35.473 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:5003/swagger/swagger-ui-bundle.js.map - - - 404 0 - 81.1100ms
2021-09-06 13:25:35.483 +02:00 [INF] Request starting HTTP/1.1 GET https://127.0.0.1:5003/swagger/swagger-ui-bundle.js.map - -
2021-09-06 13:25:35.484 +02:00 [INF] Request finished HTTP/1.1 GET https://127.0.0.1:5003/swagger/swagger-ui-bundle.js.map - - - 404 0 - 0.8687ms
2021-09-06 13:25:35.565 +02:00 [INF] Request starting HTTP/1.1 GET https://localhost:5003/swagger/swagger-ui-standalone-preset.js.map - -
2021-09-06 13:25:35.567 +02:00 [INF] Request finished HTTP/1.1 GET https://localhost:5003/swagger/swagger-ui-standalone-preset.js.map - - - 404 0 - 1.5604ms
2021-09-06 13:25:35.571 +02:00 [INF] Request starting HTTP/1.1 GET https://127.0.0.1:5003/swagger/swagger-ui-standalone-preset.js.map - -
2021-09-06 13:25:35.571 +02:00 [INF] Request finished HTTP/1.1 GET https://127.0.0.1:5003/swagger/swagger-ui-standalone-preset.js.map - - - 404 0 - 0.4430ms
2021-09-06 13:25:35.615 +02:00 [INF] Request starting HTTP/2 GET https://localhost:5003/swagger/v1/swagger.json - -
2021-09-06 13:25:35.663 +02:00 [INF] Request finished HTTP/2 GET https://localhost:5003/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 48.0459ms
